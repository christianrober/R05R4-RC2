This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by configure, which was
generated by GNU Autoconf 2.52.  Invocation command line was

  $ ./configure --host=bfin-linux --enable-shared=no

## ---------- ##
## Platform.  ##
## ---------- ##

hostname = linux
uname -m = i686
uname -r = 2.6.11.4-21.9-smp
uname -s = Linux
uname -v = #1 SMP Fri Aug 19 11:58:59 UTC 2005

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = i686
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
hostinfo               = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH = /opt/uClinux/bfin-uclinux/bin/:/opt/uClinux/bfin-uclinux/bin/:/opt/uClinux/bfin-uclinux/bin/:/usr/local/bin:/usr/bin:/usr/X11R6/bin:/bin:/usr/games:/opt/gnome/bin:/opt/kde3/bin:/opt/cdk4nios/bin

## ------------ ##
## Core tests.  ##
## ------------ ##

configure:1204: PATH=".;."; conftest.sh
./configure: line 1205: conftest.sh: command not found
configure:1207: $? = 127
configure:1282: checking build system type
configure:1300: result: i686-pc-linux-gnu
configure:1307: checking host system type
configure:1321: result: bfin-unknown-linux-gnu
configure:1347: checking for a BSD compatible install
configure:1396: result: /usr/bin/install -c
configure:1407: checking whether build environment is sane
configure:1450: result: yes
configure:1483: checking for mawk
configure:1509: result: no
configure:1483: checking for gawk
configure:1498: found /usr/bin/gawk
configure:1506: result: gawk
configure:1516: checking whether make sets ${MAKE}
configure:1536: result: yes
configure:1627: checking whether to enable maintainer-specific portions of Makefiles
configure:1636: result: no
configure:1083: User:
ABI=
CC=bfin-uclinux-gcc
CFLAGS=(unset)
CPPFLAGS=(unset)
MPN_PATH=
configure:1089: GMP:
abilist=standard
cclist=gcc cc
configure:2842: bfin-uclinux-gcc -c conftest.c >&5
configure:2845: $? = 0
configure:2848: checking whether bfin-uclinux-gcc is gcc
configure:2850: result: yes
configure:2864: bfin-uclinux-gcc 2>&1 | grep xlc >/dev/null
configure:2867: $? = 1
configure:2898: checking compiler bfin-uclinux-gcc -g -O2 
configure:2926: bfin-uclinux-gcc -g -O2  conftest.c >&5
configure:2929: $? = 0
configure:2945: result: yes
configure:3328: checking for bfin-linux-gcc
configure:3351: result: bfin-uclinux-gcc
configure:3614: checking for C compiler version
configure:3617: bfin-uclinux-gcc --version </dev/null >&5
bfin-uclinux-gcc (GCC) 3.4.4
Copyright (C) 2004 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:3620: $? = 0
configure:3622: bfin-uclinux-gcc -v </dev/null >&5
Reading specs from /home/ksh/new_toolchain-uclinux/lib/gcc/bfin-uclinux/3.4.4/specs
Configured with: /home/ksh/cvs/toolschain/binutils/binutils-2.15/configure --enable-threads=posix --target=bfin-uclinux --prefix=/home/ksh/new_toolchain-uclinux --disable-libstdcxx-pch
Thread model: posix
gcc version 3.4.4
configure:3625: $? = 0
configure:3627: bfin-uclinux-gcc -V </dev/null >&5
bfin-uclinux-gcc: `-V' option must have argument
configure:3630: $? = 1
configure:3650: checking for C compiler default output
configure:3653: bfin-uclinux-gcc -g -O2   conftest.c  >&5
configure:3656: $? = 0
configure:3685: result: a.out
configure:3690: checking whether the C compiler works
configure:3696: ./a.out
./configure: line 3697: ./a.out: cannot execute binary file
configure:3699: $? = 126
configure:3714: result: yes
configure:3721: checking whether we are cross compiling
configure:3723: result: yes
configure:3726: checking for executable suffix
configure:3728: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:3731: $? = 0
configure:3753: result: 
configure:3759: checking for object suffix
configure:3777: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:3780: $? = 0
configure:3799: result: o
configure:3803: checking whether we are using the GNU C compiler
configure:3824: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:3827: $? = 0
configure:3830: test -s conftest.o
configure:3833: $? = 0
configure:3845: result: yes
configure:3851: checking whether bfin-uclinux-gcc accepts -g
configure:3869: bfin-uclinux-gcc -c -g  conftest.c >&5
configure:3872: $? = 0
configure:3875: test -s conftest.o
configure:3878: $? = 0
configure:3888: result: yes
configure:3915: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
conftest.c:2: error: parse error before "me"
configure:3918: $? = 1
configure: failed program was:
#ifndef __cplusplus
  choke me
#endif
configure:4024: checking for style of include used by make
configure:4051: result: GNU
configure:4057: checking dependency style of bfin-uclinux-gcc
configure:4119: result: none
configure:4123: checking for bfin-uclinux-gcc option to accept ANSI C
configure:4180: bfin-uclinux-gcc  -c -g -O2  conftest.c >&5
configure:4183: $? = 0
configure:4186: test -s conftest.o
configure:4189: $? = 0
configure:4206: result: none needed
configure:4219: checking how to run the C preprocessor
configure:4245: bfin-uclinux-gcc -E  conftest.c
configure:4251: $? = 0
configure:4278: bfin-uclinux-gcc -E  conftest.c
configure:4275:28: ac_nonexistent.h: No such file or directory
configure:4284: $? = 1
configure: failed program was:
#line 4274 "configure"
#include "confdefs.h"
#include <ac_nonexistent.h>
configure:4321: result: bfin-uclinux-gcc -E
configure:4336: bfin-uclinux-gcc -E  conftest.c
configure:4342: $? = 0
configure:4369: bfin-uclinux-gcc -E  conftest.c
configure:4366:28: ac_nonexistent.h: No such file or directory
configure:4375: $? = 1
configure: failed program was:
#line 4365 "configure"
#include "confdefs.h"
#include <ac_nonexistent.h>
configure:4441: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:4444: $? = 0
configure:4447: test -s conftest.o
configure:4450: $? = 0
configure:1482: Decided:
ABI=standard
CC=bfin-uclinux-gcc
CFLAGS=-g -O2
CPPFLAGS=
GMP_LDFLAGS=
CXX=
CXXFLAGS=
path=  generic
configure:5168: checking for bfin-uclinux-gcc option to accept ANSI C
configure:5228: bfin-uclinux-gcc  -c -g -O2  conftest.c >&5
configure:5231: $? = 0
configure:5234: test -s conftest.o
configure:5237: $? = 0
configure:5251: result: none needed
configure:5262: checking for function prototypes
configure:5265: result: yes
configure:5279: checking for ANSI C header files
configure:5293: bfin-uclinux-gcc -E  conftest.c
configure:5299: $? = 0
configure:5407: result: yes
configure:5420: checking for string.h
configure:5430: bfin-uclinux-gcc -E  conftest.c
configure:5436: $? = 0
configure:5455: result: yes
configure:5469: checking for bfin-linux-ar
configure:5495: result: no
configure:5504: checking for ar
configure:5519: found /usr/bin/ar
configure:5528: result: ar
configure:5556: checking for BSD-compatible nm
configure:5591: result: nm
configure:5607: checking for BSD-compatible nm
configure:5642: result: /usr/bin/nm -B
configure:5907: checking for ld used by GCC
configure:5971: result: /home/ksh/new_toolchain-uclinux/bfin-uclinux/bin/ld
configure:5980: checking if the linker (/home/ksh/new_toolchain-uclinux/bfin-uclinux/bin/ld) is GNU ld
GNU ld version 2.15.94 20041120
configure:5992: result: yes
configure:5996: checking for /home/ksh/new_toolchain-uclinux/bfin-uclinux/bin/ld option to reload object files
configure:6003: result: -r
configure:6012: checking whether ln -s works
configure:6016: result: yes
configure:6023: checking how to recognise dependant libraries
configure:6210: result: file_magic ELF [0-9][0-9]*-bit [LM]SB (shared object|dynamic lib )
configure:6661: checking for dlfcn.h
configure:6671: bfin-uclinux-gcc -E  conftest.c
configure:6677: $? = 0
configure:6696: result: yes
configure:6709: checking the maximum length of command line arguments
configure:6758: result: 49153
configure:6766: checking command to parse /usr/bin/nm -B output from bfin-uclinux-gcc object
configure:6851: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:6854: $? = 0
configure:6858: /usr/bin/nm -B conftest.o \| sed -n -e 's/^.*[ 	]\([ABCDGISTW][ABCDGISTW]*\)[ 	][ 	]*\(\)\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2\3 \3/p' \> conftest.nm
configure:6861: $? = 0
cannot find nm_test_var in conftest.nm
configure:6851: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:6854: $? = 0
configure:6858: /usr/bin/nm -B conftest.o \| sed -n -e 's/^.*[ 	]\([ABCDGISTW][ABCDGISTW]*\)[ 	][ 	]*\(_\)\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2\3 \3/p' \> conftest.nm
configure:6861: $? = 0
configure:6913: bfin-uclinux-gcc -o conftest -g -O2   conftest.c conftstm.o >&5
configure:6916: $? = 0
configure:6954: result: ok
configure:6958: checking for objdir
configure:6973: result: .libs
configure:7021: checking for bfin-linux-ranlib
configure:7047: result: no
configure:7056: checking for ranlib
configure:7071: found /usr/bin/ranlib
configure:7080: result: ranlib
configure:7095: checking for bfin-linux-strip
configure:7121: result: no
configure:7130: checking for strip
configure:7145: found /usr/bin/strip
configure:7154: result: strip
configure:7206: checking for bfin-linux-file
configure:7262: result: no
configure:7268: checking for file
configure:7321: result: /usr/bin/file
configure:7410: checking if bfin-uclinux-gcc static flag  works
configure:7433: result: yes
configure:7447: checking if bfin-uclinux-gcc supports -fno-rtti -fno-exceptions
cc1: warning: command line option "-fno-rtti" is valid for C++/ObjC++ but not for C
cc1: warning: command line option "-fno-rtti" is valid for C++/ObjC++ but not for C
configure:7472: result: no
configure:7487: checking for bfin-uclinux-gcc option to produce PIC
configure:7640: result: -fPIC
configure:7647: checking if bfin-uclinux-gcc PIC flag -fPIC works
configure:7672: result: yes
configure:7696: checking if bfin-uclinux-gcc supports -c -o file.o
configure:7737: result: yes
configure:7762: checking whether the bfin-uclinux-gcc linker (/home/ksh/new_toolchain-uclinux/bfin-uclinux/bin/ld) supports shared libraries
configure:8546: result: yes
configure:8611: checking how to hardcode library paths into programs
configure:8635: result: immediate
configure:8649: checking whether stripping libraries is possible
configure:8654: result: yes
configure:8661: checking dynamic linker characteristics
configure:9100: result: GNU/Linux ld.so
configure:9697: checking if libtool supports shared libraries
configure:9699: result: yes
configure:9702: checking whether to build shared libraries
configure:9723: result: no
configure:9726: checking whether to build static libraries
configure:9730: result: yes
configure:9810: creating libtool
configure:16491: checking for ANSI C header files
configure:16619: result: yes
configure:16629: checking whether time.h and sys/time.h may both be included
configure:16651: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
In file included from configure:16638:
/home/ksh/new_toolchain-uclinux/lib/gcc/bfin-uclinux/3.4.4/../../../../bfin-uclinux/include/time.h:290:2: warning: #warning "mjn3 FIXME: __tzname, __daylight, and __timezone have a prototype but are not defined."
/home/ksh/new_toolchain-uclinux/lib/gcc/bfin-uclinux/3.4.4/../../../../bfin-uclinux/include/time.h:352:2: warning: #warning "mjn3 FIXME: a bunch of unimplemented function prototypes."
/home/ksh/new_toolchain-uclinux/lib/gcc/bfin-uclinux/3.4.4/../../../../bfin-uclinux/include/time.h:397:2: warning: #warning "mjn3 FIXME: a bunch of unimplemented function prototypes."
configure:16654: $? = 0
configure:16657: test -s conftest.o
configure:16660: $? = 0
configure:16670: result: yes
configure:16696: checking for fcntl.h
configure:16706: bfin-uclinux-gcc -E  conftest.c
configure:16712: $? = 0
configure:16731: result: yes
configure:16696: checking for locale.h
configure:16706: bfin-uclinux-gcc -E  conftest.c
configure:16712: $? = 0
configure:16731: result: yes
configure:16696: checking for sys/mman.h
configure:16706: bfin-uclinux-gcc -E  conftest.c
configure:16712: $? = 0
configure:16731: result: yes
configure:16696: checking for sys/param.h
configure:16706: bfin-uclinux-gcc -E  conftest.c
configure:16712: $? = 0
configure:16731: result: yes
configure:16696: checking for sys/processor.h
configure:16706: bfin-uclinux-gcc -E  conftest.c
configure:16703:27: sys/processor.h: No such file or directory
configure:16712: $? = 1
configure: failed program was:
#line 16702 "configure"
#include "confdefs.h"
#include <sys/processor.h>
configure:16731: result: no
configure:16696: checking for sys/resource.h
configure:16706: bfin-uclinux-gcc -E  conftest.c
configure:16712: $? = 0
configure:16731: result: yes
configure:16696: checking for sys/sysctl.h
configure:16706: bfin-uclinux-gcc -E  conftest.c
In file included from /home/ksh/new_toolchain-uclinux/lib/gcc/bfin-uclinux/3.4.4/../../../../bfin-uclinux/include/linux/sysctl.h:23,
                 from /home/ksh/new_toolchain-uclinux/lib/gcc/bfin-uclinux/3.4.4/../../../../bfin-uclinux/include/sys/sysctl.h:28,
                 from configure:16703:
/home/ksh/new_toolchain-uclinux/lib/gcc/bfin-uclinux/3.4.4/../../../../bfin-uclinux/include/linux/list.h:705:2: warning: #warning "don't include kernel headers in userspace"
configure:16712: $? = 0
configure:16731: result: yes
configure:16696: checking for sys/syssgi.h
configure:16706: bfin-uclinux-gcc -E  conftest.c
configure:16703:24: sys/syssgi.h: No such file or directory
configure:16712: $? = 1
configure: failed program was:
#line 16702 "configure"
#include "confdefs.h"
#include <sys/syssgi.h>
configure:16731: result: no
configure:16696: checking for sys/systemcfg.h
configure:16706: bfin-uclinux-gcc -E  conftest.c
configure:16703:27: sys/systemcfg.h: No such file or directory
configure:16712: $? = 1
configure: failed program was:
#line 16702 "configure"
#include "confdefs.h"
#include <sys/systemcfg.h>
configure:16731: result: no
configure:16696: checking for sys/time.h
configure:16706: bfin-uclinux-gcc -E  conftest.c
configure:16712: $? = 0
configure:16731: result: yes
configure:16696: checking for sys/times.h
configure:16706: bfin-uclinux-gcc -E  conftest.c
configure:16712: $? = 0
configure:16731: result: yes
configure:16748: checking for sys/types.h
configure:16760: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:16763: $? = 0
configure:16766: test -s conftest.o
configure:16769: $? = 0
configure:16779: result: yes
configure:16748: checking for sys/stat.h
configure:16760: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:16763: $? = 0
configure:16766: test -s conftest.o
configure:16769: $? = 0
configure:16779: result: yes
configure:16748: checking for stdlib.h
configure:16760: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:16763: $? = 0
configure:16766: test -s conftest.o
configure:16769: $? = 0
configure:16779: result: yes
configure:16748: checking for string.h
configure:16779: result: yes
configure:16748: checking for memory.h
configure:16760: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:16763: $? = 0
configure:16766: test -s conftest.o
configure:16769: $? = 0
configure:16779: result: yes
configure:16748: checking for strings.h
configure:16760: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:16763: $? = 0
configure:16766: test -s conftest.o
configure:16769: $? = 0
configure:16779: result: yes
configure:16748: checking for inttypes.h
configure:16760: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:16763: $? = 0
configure:16766: test -s conftest.o
configure:16769: $? = 0
configure:16779: result: yes
configure:16748: checking for stdint.h
configure:16760: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:16763: $? = 0
configure:16766: test -s conftest.o
configure:16769: $? = 0
configure:16779: result: yes
configure:16748: checking for unistd.h
configure:16760: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:16763: $? = 0
configure:16766: test -s conftest.o
configure:16769: $? = 0
configure:16779: result: yes
configure:16789: checking whether fgetc is declared
configure:16810: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:16813: $? = 0
configure:16816: test -s conftest.o
configure:16819: $? = 0
configure:16829: result: yes
configure:16843: checking whether fscanf is declared
configure:16864: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:16867: $? = 0
configure:16870: test -s conftest.o
configure:16873: $? = 0
configure:16883: result: yes
configure:16897: checking whether optarg is declared
configure:16918: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:16921: $? = 0
configure:16924: test -s conftest.o
configure:16927: $? = 0
configure:16937: result: yes
configure:16951: checking whether ungetc is declared
configure:16972: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:16975: $? = 0
configure:16978: test -s conftest.o
configure:16981: $? = 0
configure:16991: result: yes
configure:17005: checking whether vfprintf is declared
configure:17026: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:17029: $? = 0
configure:17032: test -s conftest.o
configure:17035: $? = 0
configure:17045: result: yes
configure:17060: checking return type of signal handlers
configure:17088: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:17091: $? = 0
configure:17094: test -s conftest.o
configure:17097: $? = 0
configure:17107: result: void
configure:17115: checking for intmax_t
configure:17136: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:17139: $? = 0
configure:17142: test -s conftest.o
configure:17145: $? = 0
configure:17155: result: yes
configure:17164: checking for long double
configure:17185: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:17188: $? = 0
configure:17191: test -s conftest.o
configure:17194: $? = 0
configure:17204: result: yes
configure:17213: checking for long long
configure:17234: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:17237: $? = 0
configure:17240: test -s conftest.o
configure:17243: $? = 0
configure:17253: result: yes
configure:17262: checking for ptrdiff_t
configure:17283: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:17286: $? = 0
configure:17289: test -s conftest.o
configure:17292: $? = 0
configure:17302: result: yes
configure:17311: checking for quad_t
configure:17332: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:17335: $? = 0
configure:17338: test -s conftest.o
configure:17341: $? = 0
configure:17351: result: yes
configure:17361: checking for preprocessor stringizing operator
configure:17382: result: yes
configure:17392: checking for working volatile
configure:17412: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:17415: $? = 0
configure:17418: test -s conftest.o
configure:17421: $? = 0
configure:17431: result: yes
configure:17441: checking whether <stdarg.h> exists and works
configure:17468: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:17471: $? = 0
configure:17474: test -s conftest.o
configure:17477: $? = 0
configure:17488: result: yes
configure:17498: checking whether gcc __attribute__ ((const)) works
configure:17516: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:17519: $? = 0
configure:17522: test -s conftest.o
configure:17525: $? = 0
configure:17536: result: yes
configure:17546: checking whether gcc __attribute__ ((malloc)) works
configure:17555: bfin-uclinux-gcc -g -O2  -c conftest.c >conftest.out 2>&1
configure:17558: $? = 0
configure:17572: result: yes
configure:17582: checking whether gcc __attribute__ ((mode (XX))) works
configure:17600: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:17603: $? = 0
configure:17606: test -s conftest.o
configure:17609: $? = 0
configure:17620: result: yes
configure:17630: checking whether gcc __attribute__ ((noreturn)) works
configure:17648: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:17651: $? = 0
configure:17654: test -s conftest.o
configure:17657: $? = 0
configure:17668: result: yes
configure:17678: checking for inline
configure:17702: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:17705: $? = 0
configure:17708: test -s conftest.o
configure:17711: $? = 0
configure:17726: result: yes
configure:17768: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:17771: $? = 0
configure:17774: test -s conftest.o
configure:17777: $? = 0
configure:17902: checking for main in -lm
configure:17922: bfin-uclinux-gcc -o conftest -g -O2   conftest.c -lm   >&5
configure:17925: $? = 0
configure:17928: test -s conftest
configure:17931: $? = 0
configure:17942: result: yes
configure:17953: checking for working alloca.h
configure:17971: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:17974: $? = 0
configure:17977: test -s conftest
configure:17980: $? = 0
configure:17990: result: yes
configure:18000: checking for alloca (via gmp-impl.h)
configure:18026: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18029: $? = 0
configure:18032: test -s conftest
configure:18035: $? = 0
configure:18045: result: yes
configure:18055: checking how to allocate temporary memory
configure:18079: result: alloca
configure:18150: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:18153: $? = 0
configure:18156: test -s conftest.o
configure:18159: $? = 0
configure:18208: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:18195: error: parse error before "die"
configure:18198: error: syntax error before "int"
configure:18211: $? = 1
configure: failed program was:
#line 18184 "configure"
#include "confdefs.h"
#include <stdio.h>
#define __GMP_WITHIN_CONFIGURE 1   /* ignore template stuff */
#define GMP_NAIL_BITS 0
#define __GMP_BITS_PER_MP_LIMB 123 /* dummy for GMP_NUMB_BITS etc */
#define GMP_LIMB_BITS 123
/* #undef _LONG_LONG_LIMB */
#include "./gmp-h.in"

#include "./gmp-impl.h"
#ifndef _GMP_IEEE_FLOATS
die die die
#endif

int
main ()
{

  ;
  return 0;
}
configure:18224: WARNING: gmp-impl.h doesnt recognise "double" as IEEE.
configure:18226: WARNING: If your CPU floats are in fact IEEE then you
configure:18228: WARNING: might like to augment the tests there.
configure:18243: checking whether byte ordering is bigendian
configure:18365: result: unknown
configure:18392: checking format of `double' floating point
configure:18410: bfin-uclinux-gcc -g -O2  -c conftest.c >&5 2>&1
configure:18413: $? = 0
configure:18554: result: IEEE little endian
configure:18632: checking for alarm
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for clock
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for clock_gettime
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for cputime
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
/tmp/ccXYGjKl.o(.text+0x6): In function `main':
/home/ksh/cvs/commit/12-7/uClinux-dist/lib/gmp/configure:18660: undefined reference to `_cputime'
/tmp/ccXYGjKl.o(.text+0xa):/home/ksh/cvs/commit/12-7/uClinux-dist/lib/gmp/configure:18660: undefined reference to `_cputime'
collect2: ld returned 1 exit status
configure:18672: $? = 1
configure: failed program was:
#line 18638 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char cputime (); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
   builtin and then its argument prototype would still apply.  */
char cputime ();
char (*f) ();

int
main ()
{
/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_cputime) || defined (__stub___cputime)
choke me
#else
f = cputime;
#endif

  ;
  return 0;
}
configure:18688: result: no
configure:18632: checking for getpagesize
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for getrusage
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for gettimeofday
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for localeconv
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for memset
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18648: warning: conflicting types for built-in function 'memset'
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for mmap
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for mprotect
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for obstack_vprintf
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
/tmp/ccQAi3xm.o(.text+0x6): In function `main':
/home/ksh/cvs/commit/12-7/uClinux-dist/lib/gmp/configure:18660: undefined reference to `_obstack_vprintf'
/tmp/ccQAi3xm.o(.text+0xa):/home/ksh/cvs/commit/12-7/uClinux-dist/lib/gmp/configure:18660: undefined reference to `_obstack_vprintf'
collect2: ld returned 1 exit status
configure:18672: $? = 1
configure: failed program was:
#line 18638 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char obstack_vprintf (); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
   builtin and then its argument prototype would still apply.  */
char obstack_vprintf ();
char (*f) ();

int
main ()
{
/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_obstack_vprintf) || defined (__stub___obstack_vprintf)
choke me
#else
f = obstack_vprintf;
#endif

  ;
  return 0;
}
configure:18688: result: no
configure:18632: checking for popen
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for processor_info
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
/tmp/ccKN49WH.o(.text+0x6): In function `main':
/home/ksh/cvs/commit/12-7/uClinux-dist/lib/gmp/configure:18660: undefined reference to `_processor_info'
/tmp/ccKN49WH.o(.text+0xa):/home/ksh/cvs/commit/12-7/uClinux-dist/lib/gmp/configure:18660: undefined reference to `_processor_info'
collect2: ld returned 1 exit status
configure:18672: $? = 1
configure: failed program was:
#line 18638 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char processor_info (); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
   builtin and then its argument prototype would still apply.  */
char processor_info ();
char (*f) ();

int
main ()
{
/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_processor_info) || defined (__stub___processor_info)
choke me
#else
f = processor_info;
#endif

  ;
  return 0;
}
configure:18688: result: no
configure:18632: checking for read_real_time
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
/tmp/ccsLV62P.o(.text+0x6): In function `main':
/home/ksh/cvs/commit/12-7/uClinux-dist/lib/gmp/configure:18660: undefined reference to `_read_real_time'
/tmp/ccsLV62P.o(.text+0xa):/home/ksh/cvs/commit/12-7/uClinux-dist/lib/gmp/configure:18660: undefined reference to `_read_real_time'
collect2: ld returned 1 exit status
configure:18672: $? = 1
configure: failed program was:
#line 18638 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char read_real_time (); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
   builtin and then its argument prototype would still apply.  */
char read_real_time ();
char (*f) ();

int
main ()
{
/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_read_real_time) || defined (__stub___read_real_time)
choke me
#else
f = read_real_time;
#endif

  ;
  return 0;
}
configure:18688: result: no
configure:18632: checking for sigaction
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for sigaltstack
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for sigstack
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
/tmp/cc4PqhWg.o(.text+0x6): In function `main':
/home/ksh/cvs/commit/12-7/uClinux-dist/lib/gmp/configure:18660: undefined reference to `_sigstack'
/tmp/cc4PqhWg.o(.text+0xa):/home/ksh/cvs/commit/12-7/uClinux-dist/lib/gmp/configure:18660: undefined reference to `_sigstack'
collect2: ld returned 1 exit status
configure:18672: $? = 1
configure: failed program was:
#line 18638 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char sigstack (); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
   builtin and then its argument prototype would still apply.  */
char sigstack ();
char (*f) ();

int
main ()
{
/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_sigstack) || defined (__stub___sigstack)
choke me
#else
f = sigstack;
#endif

  ;
  return 0;
}
configure:18688: result: no
configure:18632: checking for syssgi
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
/tmp/cc2LaZMo.o(.text+0x6): In function `main':
/home/ksh/cvs/commit/12-7/uClinux-dist/lib/gmp/configure:18660: undefined reference to `_syssgi'
/tmp/cc2LaZMo.o(.text+0xa):/home/ksh/cvs/commit/12-7/uClinux-dist/lib/gmp/configure:18660: undefined reference to `_syssgi'
collect2: ld returned 1 exit status
configure:18672: $? = 1
configure: failed program was:
#line 18638 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char syssgi (); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
   builtin and then its argument prototype would still apply.  */
char syssgi ();
char (*f) ();

int
main ()
{
/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_syssgi) || defined (__stub___syssgi)
choke me
#else
f = syssgi;
#endif

  ;
  return 0;
}
configure:18688: result: no
configure:18632: checking for strchr
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18648: warning: conflicting types for built-in function 'strchr'
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for strnlen
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for strtoul
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for sysconf
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for sysctl
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18632: checking for sysctlbyname
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
/tmp/ccOlqzC0.o(.text+0x6): In function `main':
/home/ksh/cvs/commit/12-7/uClinux-dist/lib/gmp/configure:18660: undefined reference to `_sysctlbyname'
/tmp/ccOlqzC0.o(.text+0xa):/home/ksh/cvs/commit/12-7/uClinux-dist/lib/gmp/configure:18660: undefined reference to `_sysctlbyname'
collect2: ld returned 1 exit status
configure:18672: $? = 1
configure: failed program was:
#line 18638 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char sysctlbyname (); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
   builtin and then its argument prototype would still apply.  */
char sysctlbyname ();
char (*f) ();

int
main ()
{
/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_sysctlbyname) || defined (__stub___sysctlbyname)
choke me
#else
f = sysctlbyname;
#endif

  ;
  return 0;
}
configure:18688: result: no
configure:18632: checking for times
configure:18669: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18672: $? = 0
configure:18675: test -s conftest
configure:18678: $? = 0
configure:18688: result: yes
configure:18701: checking for vsnprintf
configure:18738: bfin-uclinux-gcc -o conftest -g -O2   conftest.c  >&5
configure:18717: warning: conflicting types for built-in function 'vsnprintf'
configure:18741: $? = 0
configure:18744: test -s conftest
configure:18747: $? = 0
configure:18757: result: yes
configure:18768: checking whether vsnprintf works
configure:18854: result: probably
configure:18857: WARNING: cannot check for properly working vsnprintf when cross compiling, will assume it's ok
configure:18876: checking whether sscanf needs writable input
configure:18888: result: no
configure:20112: checking for mp_limb_t
configure:20140: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:20143: $? = 0
configure:20146: test -s conftest.o
configure:20149: $? = 0
configure:20159: result: yes
configure:20162: checking size of mp_limb_t
configure:20190: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:20193: $? = 0
configure:20196: test -s conftest.o
configure:20199: $? = 0
configure:20223: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure: In function `main':
configure:20217: error: size of array `_array_' is negative
configure:20226: $? = 1
configure: failed program was:
#line 20204 "configure"
#include "confdefs.h"
#include <stdio.h>
#define __GMP_WITHIN_CONFIGURE 1   /* ignore template stuff */
#define GMP_NAIL_BITS 0
#define __GMP_BITS_PER_MP_LIMB 123 /* dummy for GMP_NUMB_BITS etc */
#define GMP_LIMB_BITS 123
/* #undef _LONG_LONG_LIMB */
#include "./gmp-h.in"

int
main ()
{
int _array_ [1 - 2 * !((sizeof (mp_limb_t)) <= 0)]
  ;
  return 0;
}
configure:20223: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure: In function `main':
configure:20217: error: size of array `_array_' is negative
configure:20226: $? = 1
configure: failed program was:
#line 20204 "configure"
#include "confdefs.h"
#include <stdio.h>
#define __GMP_WITHIN_CONFIGURE 1   /* ignore template stuff */
#define GMP_NAIL_BITS 0
#define __GMP_BITS_PER_MP_LIMB 123 /* dummy for GMP_NUMB_BITS etc */
#define GMP_LIMB_BITS 123
/* #undef _LONG_LONG_LIMB */
#include "./gmp-h.in"

int
main ()
{
int _array_ [1 - 2 * !((sizeof (mp_limb_t)) <= 1)]
  ;
  return 0;
}
configure:20223: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure: In function `main':
configure:20217: error: size of array `_array_' is negative
configure:20226: $? = 1
configure: failed program was:
#line 20204 "configure"
#include "confdefs.h"
#include <stdio.h>
#define __GMP_WITHIN_CONFIGURE 1   /* ignore template stuff */
#define GMP_NAIL_BITS 0
#define __GMP_BITS_PER_MP_LIMB 123 /* dummy for GMP_NUMB_BITS etc */
#define GMP_LIMB_BITS 123
/* #undef _LONG_LONG_LIMB */
#include "./gmp-h.in"

int
main ()
{
int _array_ [1 - 2 * !((sizeof (mp_limb_t)) <= 3)]
  ;
  return 0;
}
configure:20223: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:20226: $? = 0
configure:20229: test -s conftest.o
configure:20232: $? = 0
configure:20311: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:20314: $? = 0
configure:20317: test -s conftest.o
configure:20320: $? = 0
configure:20311: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:20314: $? = 0
configure:20317: test -s conftest.o
configure:20320: $? = 0
configure:20385: result: 4
configure:21263: checking for stack_t
configure:21285: bfin-uclinux-gcc -c -g -O2  conftest.c >&5
configure:21288: $? = 0
configure:21291: test -s conftest.o
configure:21294: $? = 0
configure:21304: result: yes
configure:21327: checking for readline in -lreadline
configure:21354: bfin-uclinux-gcc -o conftest -g -O2   conftest.c -lreadline   >&5
/home/ksh/new_toolchain-uclinux/lib/gcc/bfin-uclinux/3.4.4/../../../../bfin-uclinux/bin/ld.real: cannot find -lreadline
collect2: ld returned 1 exit status
configure:21357: $? = 1
configure: failed program was:
#line 21335 "configure"
#include "confdefs.h"

/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
   builtin and then its argument prototype would still apply.  */
char readline ();
int
main ()
{
readline ();
  ;
  return 0;
}
configure:21374: result: no
configure:21393: checking for bison
configure:21408: found /usr/bin/bison
configure:21416: result: bison -y
configure:21431: checking for flex
configure:21446: found /usr/bin/flex
configure:21454: result: flex
configure:21467: checking for yywrap in -lfl
configure:21494: bfin-uclinux-gcc -o conftest -g -O2   conftest.c -lfl   >&5
/home/ksh/new_toolchain-uclinux/lib/gcc/bfin-uclinux/3.4.4/../../../../bfin-uclinux/bin/ld.real: cannot find -lfl
collect2: ld returned 1 exit status
configure:21497: $? = 1
configure: failed program was:
#line 21475 "configure"
#include "confdefs.h"

/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
   builtin and then its argument prototype would still apply.  */
char yywrap ();
int
main ()
{
yywrap ();
  ;
  return 0;
}
configure:21514: result: no
configure:21519: checking for yywrap in -ll
configure:21546: bfin-uclinux-gcc -o conftest -g -O2   conftest.c -ll   >&5
/home/ksh/new_toolchain-uclinux/lib/gcc/bfin-uclinux/3.4.4/../../../../bfin-uclinux/bin/ld.real: cannot find -ll
collect2: ld returned 1 exit status
configure:21549: $? = 1
configure: failed program was:
#line 21527 "configure"
#include "confdefs.h"

/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
   builtin and then its argument prototype would still apply.  */
char yywrap ();
int
main ()
{
yywrap ();
  ;
  return 0;
}
configure:21566: result: no
configure:21577: checking lex output file root
configure:21596: result: lex.yy
configure:21600: checking whether yytext is a pointer
configure:21616: bfin-uclinux-gcc -o conftest -g -O2   conftest.c   >&5
/tmp/ccVuKo9h.o(.text+0x5e2): In function `yylex':
/home/ksh/cvs/commit/12-7/uClinux-dist/lib/gmp/lex.yy.c:681: undefined reference to `_yywrap'
/home/ksh/new_toolchain-uclinux/lib/gcc/bfin-uclinux/3.4.4/../../../../bfin-uclinux/lib/libc.a(__uClibc_main.o)(.text+0xd4): In function `___uClibc_start_main':
__uClibc_main.c: undefined reference to `_main'
collect2: ld returned 1 exit status
configure:21619: $? = 1
configure: failed program was:
/* A lexical scanner generated by flex */

/* Scanner skeleton version:
 * $Header: /cvsroot/uclinux533/uClinux-dist/lib/gmp/config.log,v 1.1 2005/12/08 04:27:26 ksh Exp $
 */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5

#include <stdio.h>


/* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
#ifdef c_plusplus
#ifndef __cplusplus
#define __cplusplus
#endif
#endif


#ifdef __cplusplus

#include <stdlib.h>
#include <unistd.h>

/* Use prototypes in function declarations. */
#define YY_USE_PROTOS

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

#if __STDC__

#define YY_USE_PROTOS
#define YY_USE_CONST

#endif	/* __STDC__ */
#endif	/* ! __cplusplus */

#ifdef __TURBOC__
 #pragma warn -rch
 #pragma warn -use
#include <io.h>
#include <stdlib.h>
#define YY_USE_CONST
#define YY_USE_PROTOS
#endif

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif


#ifdef YY_USE_PROTOS
#define YY_PROTO(proto) proto
#else
#define YY_PROTO(proto) ()
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yy_start = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yy_start - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#define YY_BUF_SIZE 16384

typedef struct yy_buffer_state *YY_BUFFER_STATE;

extern int yyleng;
extern FILE *yyin, *yyout;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

/* The funky do-while in the following #define is used to turn the definition
 * int a single C statement (which needs a semi-colon terminator).  This
 * avoids problems with code like:
 *
 * 	if ( condition_holds )
 *		yyless( 5 );
 *	else
 *		do_something_else();
 *
 * Prior to using the do-while the compiler would get upset at the
 * "else" because it interpreted the "if" statement as being all
 * done when it reached the ';' after the yyless() call.
 */

/* Return all but the first 'n' matched characters back to the input stream. */

#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		*yy_cp = yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yy_c_buf_p = yy_cp = yy_bp + n - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, yytext_ptr )

/* The following is because we cannot portably get our hands on size_t
 * (without autoconf's help, which isn't available because we want
 * flex-generated scanners to compile on their own).
 */
typedef unsigned int yy_size_t;


struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;
#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2
	};

static YY_BUFFER_STATE yy_current_buffer = 0;

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 */
#define YY_CURRENT_BUFFER yy_current_buffer


/* yy_hold_char holds the character lost when yytext is formed. */
static char yy_hold_char;

static int yy_n_chars;		/* number of characters read into yy_ch_buf */


int yyleng;

/* Points to current character in buffer. */
static char *yy_c_buf_p = (char *) 0;
static int yy_init = 1;		/* whether we need to initialize */
static int yy_start = 0;	/* start state number */

/* Flag which is used to allow yywrap()'s to do buffer switches
 * instead of setting up a fresh yyin.  A bit of a hack ...
 */
static int yy_did_buffer_switch_on_eof;

void yyrestart YY_PROTO(( FILE *input_file ));

void yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));
void yy_load_buffer_state YY_PROTO(( void ));
YY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));
void yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));
void yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));
void yy_flush_buffer YY_PROTO(( YY_BUFFER_STATE b ));
#define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )

YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));

static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t ));
static void yy_flex_free YY_PROTO(( void * ));

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (yy_current_buffer->yy_at_bol)

typedef unsigned char YY_CHAR;
FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
typedef int yy_state_type;
extern char *yytext;
#define yytext_ptr yytext

static yy_state_type yy_get_previous_state YY_PROTO(( void ));
static yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));
static int yy_get_next_buffer YY_PROTO(( void ));
static void yy_fatal_error YY_PROTO(( yyconst char msg[] ));

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yytext_ptr = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
	yy_c_buf_p = yy_cp;

#define YY_NUM_RULES 1
#define YY_END_OF_BUFFER 2
static yyconst short int yy_accept[6] =
    {   0,
        0,    0,    2,    1,    0
    } ;

static yyconst int yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static yyconst int yy_meta[2] =
    {   0,
        1
    } ;

static yyconst short int yy_base[7] =
    {   0,
        0,    0,    2,    3,    3,    0
    } ;

static yyconst short int yy_def[7] =
    {   0,
        6,    6,    5,    5,    0,    5
    } ;

static yyconst short int yy_nxt[5] =
    {   0,
        4,    5,    3,    5
    } ;

static yyconst short int yy_chk[5] =
    {   0,
        6,    3,    5,    5
    } ;

static yy_state_type yy_last_accepting_state;
static char *yy_last_accepting_cpos;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
char *yytext;
#line 1 "<stdin>"
#define INITIAL 0
#line 363 "lex.yy.c"

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap YY_PROTO(( void ));
#else
extern int yywrap YY_PROTO(( void ));
#endif
#endif

#ifndef YY_NO_UNPUT
static void yyunput YY_PROTO(( int c, char *buf_ptr ));
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy YY_PROTO(( char *, yyconst char *, int ));
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen YY_PROTO(( yyconst char * ));
#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput YY_PROTO(( void ));
#else
static int input YY_PROTO(( void ));
#endif
#endif

#if YY_STACK_USED
static int yy_start_stack_ptr = 0;
static int yy_start_stack_depth = 0;
static int *yy_start_stack = 0;
#ifndef YY_NO_PUSH_STATE
static void yy_push_state YY_PROTO(( int new_state ));
#endif
#ifndef YY_NO_POP_STATE
static void yy_pop_state YY_PROTO(( void ));
#endif
#ifndef YY_NO_TOP_STATE
static int yy_top_state YY_PROTO(( void ));
#endif

#else
#define YY_NO_PUSH_STATE 1
#define YY_NO_POP_STATE 1
#define YY_NO_TOP_STATE 1
#endif

#ifdef YY_MALLOC_DECL
YY_MALLOC_DECL
#else
#if __STDC__
#ifndef __cplusplus
#include <stdlib.h>
#endif
#else
/* Just try to get by without declaring the routines.  This will fail
 * miserably on non-ANSI systems for which sizeof(size_t) != sizeof(int)
 * or sizeof(void*) != sizeof(int).
 */
#endif
#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */

#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO (void) fwrite( yytext, yyleng, 1, yyout )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( yy_current_buffer->yy_is_interactive ) \
		{ \
		int c = '*', n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else if ( ((result = fread( buf, 1, max_size, yyin )) == 0) \
		  && ferror( yyin ) ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
#endif

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL int yylex YY_PROTO(( void ))
#endif

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

YY_DECL
	{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;

#line 1 "<stdin>"

#line 516 "lex.yy.c"

	if ( yy_init )
		{
		yy_init = 0;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yy_start )
			yy_start = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! yy_current_buffer )
			yy_current_buffer =
				yy_create_buffer( yyin, YY_BUF_SIZE );

		yy_load_buffer_state();
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start;
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				yy_last_accepting_state = yy_current_state;
				yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 6 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 3 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;


do_action:	/* This label is used only to access EOF actions. */


		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yy_hold_char;
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 2 "<stdin>"
ECHO;
	YY_BREAK
#line 604 "lex.yy.c"
case YY_STATE_EOF(INITIAL):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between yy_current_buffer and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yy_n_chars = yy_current_buffer->yy_n_chars;
			yy_current_buffer->yy_input_file = yyin;
			yy_current_buffer->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yy_c_buf_p <= &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yy_c_buf_p = yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state();

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = yy_c_buf_p;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer() )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yy_did_buffer_switch_on_eof = 0;

				if ( yywrap() )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yy_c_buf_p = yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yy_c_buf_p =
					yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yy_c_buf_p =
				&yy_current_buffer->yy_ch_buf[yy_n_chars];

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of yylex */


/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */

static int yy_get_next_buffer()
	{
	register char *dest = yy_current_buffer->yy_ch_buf;
	register char *source = yytext_ptr;
	register int number_to_move, i;
	int ret_val;

	if ( yy_c_buf_p > &yy_current_buffer->yy_ch_buf[yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( yy_current_buffer->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yy_c_buf_p - yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yy_c_buf_p - yytext_ptr) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		yy_current_buffer->yy_n_chars = yy_n_chars = 0;

	else
		{
		int num_to_read =
			yy_current_buffer->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */
#ifdef YY_USES_REJECT
			YY_FATAL_ERROR(
"input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
#else

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = yy_current_buffer;

			int yy_c_buf_p_offset =
				(int) (yy_c_buf_p - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yy_flex_realloc( (void *) b->yy_ch_buf,
							 b->yy_buf_size + 2 );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = yy_current_buffer->yy_buf_size -
						number_to_move - 1;
#endif
			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
			yy_n_chars, num_to_read );

		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	if ( yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			yy_current_buffer->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	yy_n_chars += number_to_move;
	yy_current_buffer->yy_ch_buf[yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	yy_current_buffer->yy_ch_buf[yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yytext_ptr = &yy_current_buffer->yy_ch_buf[0];

	return ret_val;
	}


/* yy_get_previous_state - get the state just before the EOB char was reached */

static yy_state_type yy_get_previous_state()
	{
	register yy_state_type yy_current_state;
	register char *yy_cp;

	yy_current_state = yy_start;

	for ( yy_cp = yytext_ptr + YY_MORE_ADJ; yy_cp < yy_c_buf_p; ++yy_cp )
		{
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			yy_last_accepting_state = yy_current_state;
			yy_last_accepting_cpos = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 6 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		}

	return yy_current_state;
	}


/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */

#ifdef YY_USE_PROTOS
static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )
#else
static yy_state_type yy_try_NUL_trans( yy_current_state )
yy_state_type yy_current_state;
#endif
	{
	register int yy_is_jam;
	register char *yy_cp = yy_c_buf_p;

	register YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		yy_last_accepting_state = yy_current_state;
		yy_last_accepting_cpos = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 6 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 5);

	return yy_is_jam ? 0 : yy_current_state;
	}


#ifndef YY_NO_UNPUT
#ifdef YY_USE_PROTOS
static void yyunput( int c, register char *yy_bp )
#else
static void yyunput( c, yy_bp )
int c;
register char *yy_bp;
#endif
	{
	register char *yy_cp = yy_c_buf_p;

	/* undo effects of setting up yytext */
	*yy_cp = yy_hold_char;

	if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = yy_n_chars + 2;
		register char *dest = &yy_current_buffer->yy_ch_buf[
					yy_current_buffer->yy_buf_size + 2];
		register char *source =
				&yy_current_buffer->yy_ch_buf[number_to_move];

		while ( source > yy_current_buffer->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		yy_current_buffer->yy_n_chars =
			yy_n_chars = yy_current_buffer->yy_buf_size;

		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;


	yytext_ptr = yy_bp;
	yy_hold_char = *yy_cp;
	yy_c_buf_p = yy_cp;
	}
#endif	/* ifndef YY_NO_UNPUT */


#ifdef __cplusplus
static int yyinput()
#else
static int input()
#endif
	{
	int c;

	*yy_c_buf_p = yy_hold_char;

	if ( *yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yy_c_buf_p < &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			/* This was really a NUL. */
			*yy_c_buf_p = '\0';

		else
			{ /* need more input */
			int offset = yy_c_buf_p - yytext_ptr;
			++yy_c_buf_p;

			switch ( yy_get_next_buffer() )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/* fall through */

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap() )
						return EOF;

					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yy_c_buf_p = yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yy_c_buf_p;	/* cast for 8-bit char's */
	*yy_c_buf_p = '\0';	/* preserve yytext */
	yy_hold_char = *++yy_c_buf_p;


	return c;
	}


#ifdef YY_USE_PROTOS
void yyrestart( FILE *input_file )
#else
void yyrestart( input_file )
FILE *input_file;
#endif
	{
	if ( ! yy_current_buffer )
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE );

	yy_init_buffer( yy_current_buffer, input_file );
	yy_load_buffer_state();
	}


#ifdef YY_USE_PROTOS
void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
#else
void yy_switch_to_buffer( new_buffer )
YY_BUFFER_STATE new_buffer;
#endif
	{
	if ( yy_current_buffer == new_buffer )
		return;

	if ( yy_current_buffer )
		{
		/* Flush out information for old buffer. */
		*yy_c_buf_p = yy_hold_char;
		yy_current_buffer->yy_buf_pos = yy_c_buf_p;
		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	yy_current_buffer = new_buffer;
	yy_load_buffer_state();

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yy_did_buffer_switch_on_eof = 1;
	}


#ifdef YY_USE_PROTOS
void yy_load_buffer_state( void )
#else
void yy_load_buffer_state()
#endif
	{
	yy_n_chars = yy_current_buffer->yy_n_chars;
	yytext_ptr = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
	yyin = yy_current_buffer->yy_input_file;
	yy_hold_char = *yy_c_buf_p;
	}


#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )
#else
YY_BUFFER_STATE yy_create_buffer( file, size )
FILE *file;
int size;
#endif
	{
	YY_BUFFER_STATE b;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yy_flex_alloc( b->yy_buf_size + 2 );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
	}


#ifdef YY_USE_PROTOS
void yy_delete_buffer( YY_BUFFER_STATE b )
#else
void yy_delete_buffer( b )
YY_BUFFER_STATE b;
#endif
	{
	if ( ! b )
		return;

	if ( b == yy_current_buffer )
		yy_current_buffer = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yy_flex_free( (void *) b->yy_ch_buf );

	yy_flex_free( (void *) b );
	}


#ifndef YY_ALWAYS_INTERACTIVE
#ifndef YY_NEVER_INTERACTIVE
extern int isatty YY_PROTO(( int ));
#endif
#endif

#ifdef YY_USE_PROTOS
void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )
#else
void yy_init_buffer( b, file )
YY_BUFFER_STATE b;
FILE *file;
#endif


	{
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

#if YY_ALWAYS_INTERACTIVE
	b->yy_is_interactive = 1;
#else
#if YY_NEVER_INTERACTIVE
	b->yy_is_interactive = 0;
#else
	b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
#endif
#endif
	}


#ifdef YY_USE_PROTOS
void yy_flush_buffer( YY_BUFFER_STATE b )
#else
void yy_flush_buffer( b )
YY_BUFFER_STATE b;
#endif

	{
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == yy_current_buffer )
		yy_load_buffer_state();
	}


#ifndef YY_NO_SCAN_BUFFER
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_buffer( char *base, yy_size_t size )
#else
YY_BUFFER_STATE yy_scan_buffer( base, size )
char *base;
yy_size_t size;
#endif
	{
	YY_BUFFER_STATE b;

	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return 0;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	yy_switch_to_buffer( b );

	return b;
	}
#endif


#ifndef YY_NO_SCAN_STRING
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
#else
YY_BUFFER_STATE yy_scan_string( yy_str )
yyconst char *yy_str;
#endif
	{
	int len;
	for ( len = 0; yy_str[len]; ++len )
		;

	return yy_scan_bytes( yy_str, len );
	}
#endif


#ifndef YY_NO_SCAN_BYTES
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_bytes( yyconst char *bytes, int len )
#else
YY_BUFFER_STATE yy_scan_bytes( bytes, len )
yyconst char *bytes;
int len;
#endif
	{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;

	/* Get memory for full buffer, including space for trailing EOB's. */
	n = len + 2;
	buf = (char *) yy_flex_alloc( n );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );

	for ( i = 0; i < len; ++i )
		buf[i] = bytes[i];

	buf[len] = buf[len+1] = YY_END_OF_BUFFER_CHAR;

	b = yy_scan_buffer( buf, n );
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
	}
#endif


#ifndef YY_NO_PUSH_STATE
#ifdef YY_USE_PROTOS
static void yy_push_state( int new_state )
#else
static void yy_push_state( new_state )
int new_state;
#endif
	{
	if ( yy_start_stack_ptr >= yy_start_stack_depth )
		{
		yy_size_t new_size;

		yy_start_stack_depth += YY_START_STACK_INCR;
		new_size = yy_start_stack_depth * sizeof( int );

		if ( ! yy_start_stack )
			yy_start_stack = (int *) yy_flex_alloc( new_size );

		else
			yy_start_stack = (int *) yy_flex_realloc(
					(void *) yy_start_stack, new_size );

		if ( ! yy_start_stack )
			YY_FATAL_ERROR(
			"out of memory expanding start-condition stack" );
		}

	yy_start_stack[yy_start_stack_ptr++] = YY_START;

	BEGIN(new_state);
	}
#endif


#ifndef YY_NO_POP_STATE
static void yy_pop_state()
	{
	if ( --yy_start_stack_ptr < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN(yy_start_stack[yy_start_stack_ptr]);
	}
#endif


#ifndef YY_NO_TOP_STATE
static int yy_top_state()
	{
	return yy_start_stack[yy_start_stack_ptr - 1];
	}
#endif

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

#ifdef YY_USE_PROTOS
static void yy_fatal_error( yyconst char msg[] )
#else
static void yy_fatal_error( msg )
char msg[];
#endif
	{
	(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
	}



/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		yytext[yyleng] = yy_hold_char; \
		yy_c_buf_p = yytext + n; \
		yy_hold_char = *yy_c_buf_p; \
		*yy_c_buf_p = '\0'; \
		yyleng = n; \
		} \
	while ( 0 )


/* Internal utility routines. */

#ifndef yytext_ptr
#ifdef YY_USE_PROTOS
static void yy_flex_strncpy( char *s1, yyconst char *s2, int n )
#else
static void yy_flex_strncpy( s1, s2, n )
char *s1;
yyconst char *s2;
int n;
#endif
	{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
	}
#endif

#ifdef YY_NEED_STRLEN
#ifdef YY_USE_PROTOS
static int yy_flex_strlen( yyconst char *s )
#else
static int yy_flex_strlen( s )
yyconst char *s;
#endif
	{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
	}
#endif


#ifdef YY_USE_PROTOS
static void *yy_flex_alloc( yy_size_t size )
#else
static void *yy_flex_alloc( size )
yy_size_t size;
#endif
	{
	return (void *) malloc( size );
	}

#ifdef YY_USE_PROTOS
static void *yy_flex_realloc( void *ptr, yy_size_t size )
#else
static void *yy_flex_realloc( ptr, size )
void *ptr;
yy_size_t size;
#endif
	{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
	}

#ifdef YY_USE_PROTOS
static void yy_flex_free( void *ptr )
#else
static void yy_flex_free( ptr )
void *ptr;
#endif
	{
	free( ptr );
	}

#if YY_MAIN
int main()
	{
	yylex();
	return 0;
	}
#endif
#line 2 "<stdin>"

extern char *yytext;
configure:21637: result: no
configure:21777: creating ./config.status

## ----------------------- ##
## Running config.status.  ##
## ----------------------- ##

This file was extended by config.status 2.52, executed with
  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  > ./config.status 
on linux

config.status:22361: creating demos/pexpr-config.h
config.status:22361: creating demos/calc/calc-config.h
config.status:22361: creating demos/expr/expr-config.h
config.status:22361: creating Makefile
config.status:22361: creating mpbsd/Makefile
config.status:22361: creating mpf/Makefile
config.status:22361: creating mpn/Makefile
config.status:22361: creating mpq/Makefile
config.status:22361: creating mpz/Makefile
config.status:22361: creating printf/Makefile
config.status:22361: creating scanf/Makefile
config.status:22361: creating cxx/Makefile
config.status:22361: creating tests/Makefile
config.status:22361: creating tests/devel/Makefile
config.status:22361: creating tests/mpbsd/Makefile
config.status:22361: creating tests/mpf/Makefile
config.status:22361: creating tests/mpn/Makefile
config.status:22361: creating tests/mpq/Makefile
config.status:22361: creating tests/mpz/Makefile
config.status:22361: creating tests/rand/Makefile
config.status:22361: creating tests/misc/Makefile
config.status:22361: creating tests/cxx/Makefile
config.status:22361: creating mpfr/Makefile
config.status:22361: creating mpfr/tests/Makefile
config.status:22361: creating tune/Makefile
config.status:22361: creating demos/Makefile
config.status:22361: creating demos/calc/Makefile
config.status:22361: creating demos/expr/Makefile
config.status:22361: creating gmp.h
config.status:22361: creating mp.h
config.status:22453: creating config.h
config.status:22594: config.h is unchanged
config.status:22651: linking ./mpn/generic/add.c to mpn/add.c
config.status:22651: linking ./mpn/generic/add_1.c to mpn/add_1.c
config.status:22651: linking ./mpn/generic/add_n.c to mpn/add_n.c
config.status:22651: linking ./mpn/generic/sub.c to mpn/sub.c
config.status:22651: linking ./mpn/generic/sub_1.c to mpn/sub_1.c
config.status:22651: linking ./mpn/generic/sub_n.c to mpn/sub_n.c
config.status:22651: linking ./mpn/generic/mul_1.c to mpn/mul_1.c
config.status:22651: linking ./mpn/generic/addmul_1.c to mpn/addmul_1.c
config.status:22651: linking ./mpn/generic/submul_1.c to mpn/submul_1.c
config.status:22651: linking ./mpn/generic/lshift.c to mpn/lshift.c
config.status:22651: linking ./mpn/generic/rshift.c to mpn/rshift.c
config.status:22651: linking ./mpn/generic/dive_1.c to mpn/dive_1.c
config.status:22651: linking ./mpn/generic/diveby3.c to mpn/diveby3.c
config.status:22651: linking ./mpn/generic/divis.c to mpn/divis.c
config.status:22651: linking ./mpn/generic/divrem.c to mpn/divrem.c
config.status:22651: linking ./mpn/generic/divrem_1.c to mpn/divrem_1.c
config.status:22651: linking ./mpn/generic/divrem_2.c to mpn/divrem_2.c
config.status:22651: linking ./mpn/generic/fib2_ui.c to mpn/fib2_ui.c
config.status:22651: linking ./mpn/generic/mod_1.c to mpn/mod_1.c
config.status:22651: linking ./mpn/generic/mod_34lsub1.c to mpn/mod_34lsub1.c
config.status:22651: linking ./mpn/generic/mode1o.c to mpn/mode1o.c
config.status:22651: linking ./mpn/generic/pre_divrem_1.c to mpn/pre_divrem_1.c
config.status:22651: linking ./mpn/generic/pre_mod_1.c to mpn/pre_mod_1.c
config.status:22651: linking ./mpn/generic/dump.c to mpn/dump.c
config.status:22651: linking ./mpn/generic/mul.c to mpn/mul.c
config.status:22651: linking ./mpn/generic/mul_fft.c to mpn/mul_fft.c
config.status:22651: linking ./mpn/generic/mul_n.c to mpn/mul_n.c
config.status:22651: linking ./mpn/generic/mul_basecase.c to mpn/mul_basecase.c
config.status:22651: linking ./mpn/generic/sqr_basecase.c to mpn/sqr_basecase.c
config.status:22651: linking ./mpn/generic/random.c to mpn/random.c
config.status:22651: linking ./mpn/generic/random2.c to mpn/random2.c
config.status:22651: linking ./mpn/generic/pow_1.c to mpn/pow_1.c
config.status:22651: linking ./mpn/generic/rootrem.c to mpn/rootrem.c
config.status:22651: linking ./mpn/generic/sqrtrem.c to mpn/sqrtrem.c
config.status:22651: linking ./mpn/generic/get_str.c to mpn/get_str.c
config.status:22651: linking ./mpn/generic/set_str.c to mpn/set_str.c
config.status:22651: linking ./mpn/generic/scan0.c to mpn/scan0.c
config.status:22651: linking ./mpn/generic/scan1.c to mpn/scan1.c
config.status:22651: linking ./mpn/generic/popcount.c to mpn/popcount.c
config.status:22651: linking ./mpn/generic/hamdist.c to mpn/hamdist.c
config.status:22651: linking ./mpn/generic/cmp.c to mpn/cmp.c
config.status:22651: linking ./mpn/generic/perfsqr.c to mpn/perfsqr.c
config.status:22651: linking ./mpn/generic/bdivmod.c to mpn/bdivmod.c
config.status:22651: linking ./mpn/generic/gcd_1.c to mpn/gcd_1.c
config.status:22651: linking ./mpn/generic/gcd.c to mpn/gcd.c
config.status:22651: linking ./mpn/generic/gcdext.c to mpn/gcdext.c
config.status:22651: linking ./mpn/generic/tdiv_qr.c to mpn/tdiv_qr.c
config.status:22651: linking ./mpn/generic/dc_divrem_n.c to mpn/dc_divrem_n.c
config.status:22651: linking ./mpn/generic/sb_divrem_mn.c to mpn/sb_divrem_mn.c
config.status:22651: linking ./mpn/generic/jacbase.c to mpn/jacbase.c
config.status:22651: linking ./mpn/generic/gmp-mparam.h to gmp-mparam.h

## ----------------- ##
## Cache variables.  ##
## ----------------- ##

ac_cv_build=i686-pc-linux-gnu
ac_cv_build_alias=i686-pc-linux-gnu
ac_cv_c_bigendian=unknown
ac_cv_c_compiler_gnu=yes
ac_cv_c_stringize=yes
ac_cv_c_volatile=yes
ac_cv_env_ABI_set=
ac_cv_env_ABI_value=
ac_cv_env_CC_set=set
ac_cv_env_CC_value=bfin-uclinux-gcc
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_CXXCPP_set=
ac_cv_env_CXXCPP_value=
ac_cv_env_CXXFLAGS_set=
ac_cv_env_CXXFLAGS_value=
ac_cv_env_CXX_set=
ac_cv_env_CXX_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_M4_set=
ac_cv_env_M4_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=set
ac_cv_env_host_alias_value=bfin-linux
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_func_alarm=yes
ac_cv_func_clock=yes
ac_cv_func_clock_gettime=yes
ac_cv_func_cputime=no
ac_cv_func_getpagesize=yes
ac_cv_func_getrusage=yes
ac_cv_func_gettimeofday=yes
ac_cv_func_localeconv=yes
ac_cv_func_memset=yes
ac_cv_func_mmap=yes
ac_cv_func_mprotect=yes
ac_cv_func_obstack_vprintf=no
ac_cv_func_popen=yes
ac_cv_func_processor_info=no
ac_cv_func_read_real_time=no
ac_cv_func_sigaction=yes
ac_cv_func_sigaltstack=yes
ac_cv_func_sigstack=no
ac_cv_func_strchr=yes
ac_cv_func_strnlen=yes
ac_cv_func_strtoul=yes
ac_cv_func_sysconf=yes
ac_cv_func_sysctl=yes
ac_cv_func_sysctlbyname=no
ac_cv_func_syssgi=no
ac_cv_func_times=yes
ac_cv_func_vsnprintf=yes
ac_cv_have_decl_fgetc=yes
ac_cv_have_decl_fscanf=yes
ac_cv_have_decl_optarg=yes
ac_cv_have_decl_ungetc=yes
ac_cv_have_decl_vfprintf=yes
ac_cv_header_dlfcn_h=yes
ac_cv_header_fcntl_h=yes
ac_cv_header_inttypes_h=yes
ac_cv_header_locale_h=yes
ac_cv_header_memory_h=yes
ac_cv_header_stdc=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_mman_h=yes
ac_cv_header_sys_param_h=yes
ac_cv_header_sys_processor_h=no
ac_cv_header_sys_resource_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_sysctl_h=yes
ac_cv_header_sys_syssgi_h=no
ac_cv_header_sys_systemcfg_h=no
ac_cv_header_sys_time_h=yes
ac_cv_header_sys_times_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_time=yes
ac_cv_header_unistd_h=yes
ac_cv_host=bfin-unknown-linux-gnu
ac_cv_host_alias=bfin-linux
ac_cv_lib_fl_yywrap=no
ac_cv_lib_l_yywrap=no
ac_cv_lib_m_main=yes
ac_cv_lib_readline_readline=no
ac_cv_objext=o
ac_cv_path_install='/usr/bin/install -c'
ac_cv_prog_AWK=gawk
ac_cv_prog_CC=bfin-uclinux-gcc
ac_cv_prog_CPP='bfin-uclinux-gcc -E'
ac_cv_prog_LEX=flex
ac_cv_prog_YACC='bison -y'
ac_cv_prog_ac_ct_AR=ar
ac_cv_prog_ac_ct_RANLIB=ranlib
ac_cv_prog_ac_ct_STRIP=strip
ac_cv_prog_cc_g=yes
ac_cv_prog_cc_stdc=
ac_cv_prog_lex_root=lex.yy
ac_cv_prog_lex_yytext_pointer=no
ac_cv_prog_make_make_set=yes
ac_cv_sizeof_mp_limb_t=4
ac_cv_type_intmax_t=yes
ac_cv_type_long_double=yes
ac_cv_type_long_long=yes
ac_cv_type_mp_limb_t=yes
ac_cv_type_ptrdiff_t=yes
ac_cv_type_quad_t=yes
ac_cv_type_signal=void
ac_cv_type_stack_t=yes
am_cv_CC_dependencies_compiler_type=none
am_cv_prog_cc_stdc=
gmp_cv_c_attribute_const=yes
gmp_cv_c_attribute_malloc=yes
gmp_cv_c_attribute_mode=yes
gmp_cv_c_attribute_noreturn=yes
gmp_cv_c_double_format='IEEE little endian'
gmp_cv_c_inline=yes
gmp_cv_c_stdarg=yes
gmp_cv_func_alloca=yes
gmp_cv_func_sscanf_writable_input=no
gmp_cv_func_vsnprintf=probably
gmp_cv_header_alloca=yes
gmp_cv_option_alloca=alloca
lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [LM]SB (shared object|dynamic lib )'
lt_cv_file_magic_cmd='$MAGIC_CMD'
lt_cv_file_magic_test_file='/lib/libc.so.6 /lib/libc-*.so'
lt_cv_ld_reload_flag=-r
lt_cv_objdir=.libs
lt_cv_path_LD=/home/ksh/new_toolchain-uclinux/bfin-uclinux/bin/ld
lt_cv_path_MAGIC_CMD=/usr/bin/file
lt_cv_path_NM='/usr/bin/nm -B'
lt_cv_prog_compiler_c_o=yes
lt_cv_prog_compiler_rtti_exceptions=no
lt_cv_prog_gnu_ld=yes
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[ 	]\([ABCDGISTW][ABCDGISTW]*\)[ 	][ 	]*\(_\)\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2\3 \3/p'\'''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \([^ ]*\) $/  {\"\1\", (lt_ptr) 0},/p'\'' -e '\''s/^[BCDEGRST] \([^ ]*\) \([^ ]*\)$/  {"\2", (lt_ptr) \&\2},/p'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^. .* \(.*\)$/extern int \1;/p'\'''
lt_cv_sys_max_cmd_len=49153
lt_lt_cv_prog_compiler_c_o='"yes"'
lt_lt_cv_sys_global_symbol_pipe='"sed -n -e '\''s/^.*[ 	]\\([ABCDGISTW][ABCDGISTW]*\\)[ 	][ 	]*\\(_\\)\\([_A-Za-z][_A-Za-z0-9]*\\)\$/\\1 \\2\\3 \\3/p'\''"'
lt_lt_cv_sys_global_symbol_to_c_name_address='"sed -n -e '\''s/^: \\([^ ]*\\) \$/  {\\\"\\1\\\", (lt_ptr) 0},/p'\'' -e '\''s/^[BCDEGRST] \\([^ ]*\\) \\([^ ]*\\)\$/  {\"\\2\", (lt_ptr) \\&\\2},/p'\''"'
lt_lt_cv_sys_global_symbol_to_cdecl='"sed -n -e '\''s/^. .* \\(.*\\)\$/extern int \\1;/p'\''"'

## ------------ ##
## confdefs.h.  ##
## ------------ ##

#define HAVE_HOST_CPU_bfin 1
#define PACKAGE "gmp"
#define VERSION "4.1.4"
#define WANT_FFT 1
#define PROTOTYPES 1
#define STDC_HEADERS 1
#define HAVE_STRING_H 1
#define HAVE_DLFCN_H 1
#define STDC_HEADERS 1
#define TIME_WITH_SYS_TIME 1
#define HAVE_FCNTL_H 1
#define HAVE_LOCALE_H 1
#define HAVE_SYS_MMAN_H 1
#define HAVE_SYS_PARAM_H 1
#define HAVE_SYS_RESOURCE_H 1
#define HAVE_SYS_SYSCTL_H 1
#define HAVE_SYS_TIME_H 1
#define HAVE_SYS_TIMES_H 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_MEMORY_H 1
#define HAVE_STRINGS_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_UNISTD_H 1
#define HAVE_DECL_FGETC 1
#define HAVE_DECL_FSCANF 1
#define HAVE_DECL_OPTARG 1
#define HAVE_DECL_UNGETC 1
#define HAVE_DECL_VFPRINTF 1
#define RETSIGTYPE void
#define HAVE_INTMAX_T 1
#define HAVE_LONG_DOUBLE 1
#define HAVE_LONG_LONG 1
#define HAVE_PTRDIFF_T 1
#define HAVE_QUAD_T 1
#define HAVE_STRINGIZE 1
#define HAVE_STDARG 1
#define HAVE_ATTRIBUTE_CONST 1
#define HAVE_ATTRIBUTE_MALLOC 1
#define HAVE_ATTRIBUTE_MODE 1
#define HAVE_ATTRIBUTE_NORETURN 1
#define HAVE_ALLOCA_H 1
#define HAVE_ALLOCA 1
#define WANT_TMP_ALLOCA 1
#define HAVE_DOUBLE_IEEE_LITTLE_ENDIAN 1
#define HAVE_ALARM 1
#define HAVE_CLOCK 1
#define HAVE_CLOCK_GETTIME 1
#define HAVE_GETPAGESIZE 1
#define HAVE_GETRUSAGE 1
#define HAVE_GETTIMEOFDAY 1
#define HAVE_LOCALECONV 1
#define HAVE_MEMSET 1
#define HAVE_MMAP 1
#define HAVE_MPROTECT 1
#define HAVE_POPEN 1
#define HAVE_SIGACTION 1
#define HAVE_SIGALTSTACK 1
#define HAVE_STRCHR 1
#define HAVE_STRNLEN 1
#define HAVE_STRTOUL 1
#define HAVE_SYSCONF 1
#define HAVE_SYSCTL 1
#define HAVE_TIMES 1
#define HAVE_VSNPRINTF 1
#define GMP_MPARAM_H_SUGGEST "./mpn/generic/gmp-mparam.h"
#define SIZEOF_MP_LIMB_T 4
#define BYTES_PER_MP_LIMB 4
#define BITS_PER_ULONG BITS_PER_MP_LIMB
#define TUNE_SQR_KARATSUBA_MAX SQR_KARATSUBA_MAX_GENERIC
#define HAVE_STACK_T 1


configure: exit 0
