--- ltp-full-20051205.org/testcases/kernel/syscalls/adjtimex/adjtimex02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/adjtimex/adjtimex02.c	2005-12-12 17:32:46.000000000 +0800
@@ -115,7 +115,10 @@
 	void (*cleanup)();
 	int exp_errno;
 } test_cases[] = {
+#ifndef UCLINUX
+	/* Ignore this test set for no Protection Mode implemented on uClinux */
 	{ (struct timex *) -1, NULL, NULL, EFAULT },
+#endif
 	{ &buff, setup2, NULL, EINVAL },
 	{ &buff, setup3, NULL, EINVAL },
 	{ &buff, setup4, NULL, EINVAL },
--- ltp-full-20051205.org/testcases/kernel/syscalls/bind/bind01.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/bind/bind01.c	2005-12-12 17:37:17.000000000 +0800
@@ -76,9 +76,12 @@
 	void	(*cleanup)(void);
 	char *desc;
 } tdat[] = {
+#ifndef UCLINUX
+/* Ignore this test set for no Protection Mode implemented on uClinux */
 	{ PF_INET, SOCK_STREAM, 0, (struct sockaddr *)-1,
 		sizeof(struct sockaddr_in), -1, EFAULT, setup0, cleanup0,
 		"invalid sockaddr" },
+#endif
 	{ PF_INET, SOCK_STREAM, 0, (struct sockaddr *)&sin1,
 		3, -1, EINVAL, setup0, cleanup0,
 		"invalid salen" },
--- ltp-full-20051205.org/testcases/kernel/syscalls/capget/capget02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/capget/capget02.c	2005-12-12 17:38:18.000000000 +0800
@@ -107,8 +107,11 @@
 	int exp_errno;
 	char *errdesc;
 } test_cases[] = {
+#ifndef UCLINUX
+	/* Ignore this test set for no Protection Mode implemented on uClinux */
 	{ (cap_user_header_t)-1, &data, EFAULT, "EFAULT" },
 	{ &header, (cap_user_data_t)-1, EFAULT, "EFAULT" },
+#endif
 	{ &header, &data, EINVAL, "EINVAL" },
 	{ &header, &data, EINVAL, "EINVAL" },
 	{ &header, &data, ESRCH, "ESRCH" }
@@ -200,6 +203,9 @@
 void
 test_setup(int i)
 {
+#ifdef UCLINUX
+	i = i+2;
+#endif
 	switch (i) {
 
 	case 0 :
--- ltp-full-20051205.org/testcases/kernel/syscalls/capset/capset02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/capset/capset02.c	2005-12-12 17:38:48.000000000 +0800
@@ -118,8 +118,11 @@
 	int exp_errno;
 	char *errdesc;
 } test_cases[] = {
+#ifndef UCLINUX
+	/* Ignore this test set for no Protection Mode implemented on uClinux */
 	{ (cap_user_header_t)-1, &data, EFAULT, "EFAULT" },
 	{ &header, (cap_user_data_t)-1, EFAULT, "EFAULT" },
+#endif
 	{ &header, &data, EINVAL, "EINVAL" },
 	{ &header, &data, EPERM, "EPERM" },
 };
@@ -233,9 +236,9 @@
 void
 test_setup(int i, char *argv0)
 {
-	char nobody_uid[] = "nobody";
-	struct passwd *ltpuser;
-
+#ifdef UCLINUX
+	i = i+2;
+#endif
 	switch (i) {
 
 	case 0 :
@@ -283,12 +286,6 @@
 		default:
 			signal(SIGCHLD,SIG_IGN);
 			header.pid = child_pid;
-			ltpuser = getpwnam(nobody_uid);
-			if (seteuid(ltpuser->pw_uid) == -1) {
-				tst_resm(TBROK,"seteuid() failed: %s\n",strerror(errno));
-			cleanup();
-			}
-
 			break;
 		}
 		break;
--- ltp-full-20051205.org/testcases/kernel/syscalls/connect/connect01.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/connect/connect01.c	2005-12-12 17:39:27.000000000 +0800
@@ -82,9 +82,12 @@
 	{ PF_INET, SOCK_STREAM, 0, (struct sockaddr *)&sin1,
 		sizeof(struct sockaddr_in), -1, EBADF, setup0, cleanup0,
 		"bad file descriptor" },
+#ifndef UCLINUX
+	/* Ignore this test set for no Protection Mode implemented on uClinux */
 	{ PF_INET, SOCK_STREAM, 0, (struct sockaddr *)-1,
 		sizeof(struct sockaddr_in), -1, EFAULT, setup1, cleanup1,
 		"invalid socket buffer" },
+#endif
 	{ PF_INET, SOCK_STREAM, 0, (struct sockaddr *)&sin1,
 		3, -1, EINVAL, setup1, cleanup1,
 		"invalid salen" },
--- ltp-full-20051205.org/testcases/kernel/syscalls/fcntl/fcntl13.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/fcntl/fcntl13.c	2005-12-12 17:40:03.000000000 +0800
@@ -90,6 +90,8 @@
 		tst_resm(TINFO, "Exit block 1");
 
 /* //block2: */
+#ifndef UCLINUX
+		/* Ignore this test set for no Protection Mode implemented on uClinux */
 		tst_resm(TINFO, "Enter block 2");
 		tst_resm(TINFO, "Test for errno EFAULT");
 		fail = 0;
@@ -130,6 +132,7 @@
 			tst_resm(TINFO, "block 2 PASSED");
 		}
 		tst_resm(TINFO, "Exit block 2");
+#endif
 
 /* //block3: */
 		tst_resm(TINFO, "Enter block 3");
--- ltp-full-20051205.org/testcases/kernel/syscalls/fcntl/fcntl18.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/fcntl/fcntl18.c	2005-12-29 15:08:21.000000000 +0800
@@ -85,6 +85,9 @@
 	}
 
 	/* Error condition if address is bad */
+#ifndef UCLINUX
+	/* Ignore this test set for no Protection Mode implemented on uClinux */
+	tst_resm(TINFO, "Ignore this test in uClinux");
 	retval = fcntl(fd, F_GETLK, (struct flock *)INVAL_FLAG);
 	if (errno == EFAULT) {
 		tst_resm(TPASS, "Test F_GETLK: for errno EFAULT PASSED");
@@ -97,10 +100,14 @@
 	} else {
 		tst_resm(TINFO, "Block 1 PASSED");
 	}
+#endif
 	tst_resm(TINFO, "Exit block 1");
 
 /* //block2: */
 	tst_resm(TINFO, "Enter block 2");
+#ifndef UCLINUX
+	/* Ignore this test set for no Protection Mode implemented on uClinux */
+	tst_resm(TINFO, "Ignore this test in uClinux");
 	fail = 0;
 	/* Error condition if address is bad */
 	retval = fcntl(fd, F_GETLK64, (struct flock *)INVAL_FLAG);
@@ -115,6 +122,7 @@
 	} else {
 		tst_resm(TINFO, "Block 2 PASSED");
 	}
+#endif
 	tst_resm(TINFO, "Exit block 2");
 
 /* //block3: */
--- ltp-full-20051205.org/testcases/kernel/syscalls/fstatfs/fstatfs02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/fstatfs/fstatfs02.c	2005-12-12 17:41:23.000000000 +0800
@@ -56,7 +56,11 @@
 void cleanup(void);
 
 char *TCID = "fstatfs02";
-int TST_TOTAL = 2;
+#ifdef UCLINUX
+	int TST_TOTAL = 1;
+#else
+	int TST_TOTAL = 2;
+#endif
 extern int Tst_count;
 
 int exp_enos[]={EBADF, EFAULT, 0};
@@ -71,8 +75,11 @@
 	/* EBADF - fd is invalid */
         {-1, &buf, EBADF},
 
+#ifndef UCLINUX
+	/* Ignore this test set on uClinux */
 	/* EFAULT - address for buf is invalid */
         {1, (void *)-1, EFAULT}
+#endif
 };
 
 int main(int ac, char **av)
--- ltp-full-20051205.org/testcases/kernel/syscalls/getcwd/getcwd01.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/getcwd/getcwd01.c	2005-12-12 17:41:49.000000000 +0800
@@ -57,7 +57,11 @@
 #include "usctest.h"
 
 char *TCID = "getcwd01";
+#ifdef UCLINUX
+int TST_TOTAL = 3;
+#else
 int TST_TOTAL = 4;
+#endif
 extern int Tst_count;
 char buf[100];
 
@@ -73,7 +77,10 @@
 	int exp_errno;
 	char *exp_retval;
 } testcases[] = {
+#ifndef UCLINUX
+	/* Ignore this test set on uClinux */
 	{ "Test for EFAULT", NULL, (void *)-1, BUFSIZ, EFAULT, NULL },
+#endif
 	{ "Test for ENOMEM", NULL,  NULL, -1, ENOMEM, NULL },
 	{ "Test for EINVAL", NULL, buf, 0, EINVAL, NULL },
 	{ "Test for ERANGE", (void *)setup_test4, buf, 1, ERANGE, NULL }
--- ltp-full-20051205.org/testcases/kernel/syscalls/getcwd/getcwd02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/getcwd/getcwd02.c	2005-12-12 17:42:14.000000000 +0800
@@ -123,7 +123,10 @@
       do_block1();
       do_block2();
       do_block3();
+#ifndef UCLINUX
+      /* Ignore this test set on uClinux */
       do_block4();
+#endif
       do_block5();
       do_block6();
       do_block7();
--- ltp-full-20051205.org/testcases/kernel/syscalls/getitimer/getitimer02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/getitimer/getitimer02.c	2005-12-12 17:42:33.000000000 +0800
@@ -71,6 +71,8 @@
 	int lc;				/* loop counter */
 	char *msg;			/* message returned from parse_opts */
 
+#ifndef UCLINUX
+	tst_resm(TINFO, "Ignore this test in uClinux");
 	/* parse standard options */
 	if ((msg = parse_opts(ac, av, (option_t *)NULL, NULL)) != (char *)NULL){
 		tst_brkm(TBROK, cleanup, "OPTION PARSING ERROR - %s", msg);
@@ -115,6 +117,8 @@
 
 	cleanup();
 
+#endif /* UCLINUX */
+
 	/*NOTREACHED*/
 	return(0);
 }
@@ -151,4 +155,3 @@
 	/* exit with return code appropriate for results */
 	tst_exit();
 }
-
--- ltp-full-20051205.org/testcases/kernel/syscalls/getpeername/getpeername01.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/getpeername/getpeername01.c	2005-12-15 10:38:35.000000000 +0800
@@ -86,12 +86,15 @@
 	{ PF_INET, SOCK_STREAM, 0, (struct sockaddr *)&fsin1,
 		&sinlen, -1, ENOTCONN, setup1, cleanup1,
 		"invalid salen" },
+#ifndef UCLINUX
+	/* Ignore this test set on uClinux */
 	{ PF_UNIX, SOCK_STREAM, 0, (struct sockaddr *)0,
 		&sinlen, -1, EFAULT, setup2, cleanup1,
 		"invalid socket buffer" },
 	{ PF_UNIX, SOCK_STREAM, 0, (struct sockaddr *)&fsin1,
 		(int *)1, -1, EFAULT, setup2, cleanup1,
 		"invalid salen" },
+#endif
 };
 
 int TST_TOTAL=sizeof(tdat)/sizeof(tdat[0]); /* Total number of test cases. */
--- ltp-full-20051205.org/testcases/kernel/syscalls/getrlimit/getrlimit02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/getrlimit/getrlimit02.c	2005-12-12 17:43:32.000000000 +0800
@@ -79,7 +79,11 @@
 extern int Tst_count;
 
 char *TCID = "getrlimit02";
+#ifdef UCLINUX
+int TST_TOTAL = 1;
+#else
 int TST_TOTAL = 2;
+#endif
 
 static void cleanup(void);
 static void setup(void);
@@ -92,7 +96,10 @@
 	int res_type;		/* resource type 		*/
 	
 } testcases[] = {
+#ifndef UCLINUX
+	/* Ignore this test set on uClinux */
 	{ EFAULT, "EFAULT", (void *)-1, RLIMIT_NOFILE },
+#endif
 	{ EINVAL, "EINVAL", &rlim, RLIMIT_TOO_HIGH }
 };
 
--- ltp-full-20051205.org/testcases/kernel/syscalls/getrusage/getrusage02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/getrusage/getrusage02.c	2005-12-12 17:43:57.000000000 +0800
@@ -92,9 +92,16 @@
 	int exp_errno;
 } test_cases[] ={
 	{ RUSAGE_BOTH, &usage, EINVAL },
+#ifndef UCLINUX
+	/* Ignore this test set on uClinux */
 	{ RUSAGE_SELF, (struct rusage*) -1, EFAULT }
+#endif
 };
+#ifdef UCLINUX
+int TST_TOTAL = 1;
+#else
 int TST_TOTAL = 2;
+#endif
 
 int
 main(int ac, char **av)
--- ltp-full-20051205.org/testcases/kernel/syscalls/getsockname/getsockname01.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/getsockname/getsockname01.c	2005-12-15 10:59:11.000000000 +0800
@@ -82,12 +82,15 @@
 	{ PF_INET, SOCK_STREAM, 0, (struct sockaddr *)&fsin1,
 		&sinlen, -1, ENOTSOCK, setup0, cleanup0,
 		"bad file descriptor" },
+#ifndef UCLINUX
+	/* Ignore this test set on uClinux */
 	{ PF_INET, SOCK_STREAM, 0, (struct sockaddr *)0,
 		&sinlen, -1, EFAULT, setup1, cleanup1,
 		"invalid socket buffer" },
 	{ PF_INET, SOCK_STREAM, 0, (struct sockaddr *)&fsin1,
 		(int *)1, -1, EFAULT, setup1, cleanup1,
 		"invalid salen" },
+#endif
 };
 
 int TST_TOTAL=sizeof(tdat)/sizeof(tdat[0]); /* Total number of test cases. */
--- ltp-full-20051205.org/testcases/kernel/syscalls/gettimeofday/gettimeofday01.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/gettimeofday/gettimeofday01.c	2005-12-12 17:44:37.000000000 +0800
@@ -65,6 +65,9 @@
 	int lc;				/* loop counter */
 	char *msg;			/* message returned from parse_opts */
 
+#ifndef UCLINUX
+	/* Ignore this test set on uClinux */
+	tst_resm(TINFO, "Ignore this test in uClinux");
 	/* parse standard options */
 	if ((msg = parse_opts(ac, av, (option_t *)NULL, NULL)) != (char *)NULL){
 		tst_brkm(TBROK, cleanup, "OPTION PARSING ERROR - %s", msg);
@@ -95,6 +98,7 @@
 		}
 	}
 	cleanup();
+#endif /*  UCLINUX  */
 
 	/*NOTREACHED*/
 	return(0);
--- ltp-full-20051205.org/testcases/kernel/syscalls/read/read02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/read/read02.c	2005-12-12 17:45:06.000000000 +0800
@@ -70,7 +70,11 @@
 void setup(void);
 
 char *TCID = "read02";
+#ifdef UCLINUX
+int TST_TOTAL = 2;
+#else
 int TST_TOTAL = 3;
+#endif
 extern int Tst_count;
 
 char file[BUFSIZ];
@@ -93,8 +97,11 @@
 	/* the file descriptor is a directory - EISDIR */
 	{&fd2, buf, EISDIR,},
 
+#ifndef UCLINUX
+	/* Ignore this test set on uClinux */
 	/* the buffer is invalid - EFAULT */
 	{&fd3, (void *)-1, EFAULT}
+#endif
 };
 
 char * bad_addr = 0;
--- ltp-full-20051205.org/testcases/kernel/syscalls/recv/recv01.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/recv/recv01.c	2005-12-12 17:45:32.000000000 +0800
@@ -84,8 +84,11 @@
 		-1, EBADF, setup0, cleanup0, "bad file descriptor" },
 	{ 0, 0, 0, buf, sizeof(buf), 0,
 		-1, ENOTSOCK, setup0, cleanup0, "invalid socket" },
+#ifndef UCLINUX
+	/* Ignore this test set on uClinux */
 	{ PF_INET, SOCK_STREAM, 0, (void *)-1, sizeof(buf), 0,
 		-1, EFAULT, setup1, cleanup1, "invalid recv buffer" },
+#endif
 	{ PF_INET, SOCK_STREAM, 0, buf, sizeof(buf), -1,
 		-1, EINVAL, setup1, cleanup1, "invalid flags set" },
 };
--- ltp-full-20051205.org/testcases/kernel/syscalls/sched_rr_get_interval/sched_rr_get_interval03.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/sched_rr_get_interval/sched_rr_get_interval03.c	2005-12-12 17:45:54.000000000 +0800
@@ -92,7 +92,10 @@
 } test_cases[] = {
 	{ -1, &tp, EINVAL },
 	{ PID_DONT_EXISTS, &tp, ESRCH },
+#ifndef UCLINUX
+	/* Ignore this test set on uClinux */
 	{ 0, (struct timespec *)-1, EFAULT}
+#endif
 };
 
 int TST_TOTAL = sizeof(test_cases) / sizeof(test_cases[0]);
--- ltp-full-20051205.org/testcases/kernel/syscalls/sched_setscheduler/sched_setscheduler01.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/sched_setscheduler/sched_setscheduler01.c	2005-12-12 17:46:32.000000000 +0800
@@ -62,7 +62,13 @@
 #define INVALID_PID	999999
 
 char *TCID = "sched_setscheduler01";
+
+#ifdef UCLINUX
+int TST_TOTAL = 3;
+#else
 int TST_TOTAL = 4;
+#endif
+
 extern int Tst_count;
 
 struct sched_param param;
@@ -84,8 +90,11 @@
 	/* The policy is invalid - EINVAL */
 	{1, SCHED_INVALID, &param, EINVAL},
 
+#ifndef UCLINUX
+	/* Ignore this test set on uClinux */
 	/* The param address is invalid - EFAULT */
 	{1, SCHED_OTHER, (struct sched_param *)-1, EFAULT},
+#endif
 
 	/* The priority value in param invalid - EINVAL*/
 	{0, SCHED_OTHER, &param1, EINVAL}
--- ltp-full-20051205.org/testcases/kernel/syscalls/send/send01.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/send/send01.c	2005-12-12 17:47:02.000000000 +0800
@@ -83,14 +83,20 @@
 		-1, EBADF, setup0, cleanup0, "bad file descriptor" },
 	{ 0, 0, 0, buf, sizeof(buf), 0,
 		-1, ENOTSOCK, setup0, cleanup0, "invalid socket" },
+#ifndef UCLINUX
+	/* Ignore this test set on uClinux */
 	{ PF_INET, SOCK_STREAM, 0, (void *)-1, sizeof(buf), 0,
 		-1, EFAULT, setup1, cleanup1, "invalid send buffer" },
+#endif
 	{ PF_INET, SOCK_DGRAM, 0, bigbuf, sizeof(bigbuf), 0,
 		-1, EMSGSIZE, setup1, cleanup1, "UDP message too big" },
 	{ PF_INET, SOCK_STREAM, 0, buf, sizeof(buf), 0,
 		-1, EPIPE, setup2, cleanup1, "local endpoint shutdown" },
+#ifndef UCLINUX
+	/* Ignore this test set on uClinux */
 	{ PF_INET, SOCK_STREAM, 0, (void *)-1, sizeof(buf), -1,
 		-1, EFAULT, setup1, cleanup1, "invalid flags set" },
+#endif
 };
 
 int TST_TOTAL=sizeof(tdat)/sizeof(tdat[0]); /* Total number of test cases. */
--- ltp-full-20051205.org/testcases/kernel/syscalls/sendto/sendto01.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/sendto/sendto01.c	2005-12-12 17:47:29.000000000 +0800
@@ -86,18 +86,24 @@
 		-1, EBADF, setup0, cleanup0, "bad file descriptor" },
 	{ 0, 0, 0, buf, sizeof(buf), 0, &sin1, sizeof(sin1),
 		-1, ENOTSOCK, setup0, cleanup0, "invalid socket" },
+#ifndef UCLINUX
+	/* Ignore this test set on uClinux */
 	{ PF_INET, SOCK_DGRAM, 0, (void *)-1, sizeof(buf), 0, &sin1,
 		sizeof(sin1),
 		-1, EFAULT, setup1, cleanup1, "invalid send buffer" },
+#endif
 	{ PF_INET, SOCK_STREAM, 0, buf, sizeof(buf), 0, &sin2, sizeof(sin2),
 		 0, EFAULT, setup1, cleanup1, "connected TCP" },
 	{ PF_INET, SOCK_STREAM, 0, buf, sizeof(buf), 0, &sin1, sizeof(sin1),
 		-1, EPIPE, setup3, cleanup1, "not connected TCP" },
 	{ PF_INET, SOCK_DGRAM, 0, buf, sizeof(buf), 0, &sin1, -1,
 		-1, EINVAL, setup1, cleanup1, "invalid to buffer length" },
+#ifndef UCLINUX
+	/* Ignore this test set on uClinux */
 	{ PF_INET, SOCK_DGRAM, 0, buf, sizeof(buf), 0, (struct sockaddr_in *)-1,
 		sizeof(sin1),
 		-1, EFAULT, setup1, cleanup1, "invalid to buffer" },
+#endif
 	{ PF_INET, SOCK_DGRAM, 0, bigbuf, sizeof(bigbuf), 0, &sin1,
 		sizeof(sin1),
 		-1, EMSGSIZE, setup1, cleanup1, "UDP message too big" },
--- ltp-full-20051205.org/testcases/kernel/syscalls/sethostname/sethostname02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/sethostname/sethostname02.c	2005-12-12 17:47:51.000000000 +0800
@@ -92,7 +92,11 @@
 static void setup(void);
 
 char *TCID = "sethostname02";
+#ifdef UCLINUX
+int TST_TOTAL = 2;
+#else
 int TST_TOTAL = 3;
+#endif
 static char hostname[MAX_LENGTH];
 static char hname[MAX_LENGTH];
 static char largehost[LARGE_LENGTH];
@@ -106,7 +110,10 @@
 	{ "Length is -ve", EINVAL, "EINVAL", hostname, -1 },
 	{ "Length > max allowed size", EINVAL, "EINVAL", largehost, 
 		sizeof(largehost)},
+#ifndef UCLINUX
+	/* Ignore this test on uClinux */
 	{ "Invalid address ", EFAULT, "EFAULT", (void *)-1, sizeof(hostname)}
+#endif
 };
 
 static int exp_enos[] = {EINVAL, EINVAL, EFAULT, 0};
--- ltp-full-20051205.org/testcases/kernel/syscalls/setitimer/setitimer02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/setitimer/setitimer02.c	2005-12-12 17:48:16.000000000 +0800
@@ -73,6 +73,8 @@
 	char *msg;			/* message returned from parse_opts */
 	struct itimerval *value;
 
+#ifndef UCLINUX
+	tst_resm(TINFO, "Ignore this test on uClinux");
 	/* parse standard options */
 	if ((msg = parse_opts(ac, av, (option_t *)NULL, NULL)) != (char *)NULL){
 		tst_brkm(TBROK, tst_exit, "OPTION PARSING ERROR - %s", msg);
@@ -135,6 +137,7 @@
 	cleanup();
 
 	/*NOTREACHED*/
+#endif /* UCLINUX */
 
   return(0);
 
--- ltp-full-20051205.org/testcases/kernel/syscalls/settimeofday/settimeofday01.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/settimeofday/settimeofday01.c	2005-12-12 17:48:37.000000000 +0800
@@ -82,6 +82,8 @@
 	char *msg;			/* message returned from parse_opts */
 	suseconds_t delta;
 
+#ifndef UCLINUX
+	/* Ignore this test on uClinux */
 	/* parse standard options */
 	if ((msg = parse_opts(argc, argv, (option_t *)NULL, NULL)) !=
 	    (char *)NULL) {
@@ -141,6 +143,7 @@
 	}
 	cleanup();
 	/*NOTREACHED*/
+#endif
 
   return(0);
 
--- ltp-full-20051205.org/testcases/kernel/syscalls/settimeofday/settimeofday02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/settimeofday/settimeofday02.c	2005-12-12 17:49:30.000000000 +0800
@@ -86,6 +86,8 @@
 	int lc;				/* loop counter */
 	char *msg;			/* message returned from parse_opts */
 
+#ifndef UCLINUX
+	/* Ignore this test on uClinux */
 	/* parse standard options */
 	if ((msg = parse_opts(argc, argv, (option_t *)NULL, NULL)) !=
 	    (char *)NULL) {
@@ -131,6 +133,7 @@
 	}
 	cleanup();
 	/*NOTREACHED*/
+#endif /* UCLINUX */
 
   return(0);
 
--- ltp-full-20051205.org/testcases/kernel/syscalls/socketpair/socketpair01.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/socketpair/socketpair01.c	2005-12-12 17:49:51.000000000 +0800
@@ -75,12 +75,17 @@
 	{ PF_INET, 75, 0, sv, -1, EINVAL, "invalid type" },
 	{ PF_UNIX, SOCK_DGRAM, 0, sv, 0, 0, "UNIX domain dgram" },
 	{ PF_INET, SOCK_RAW, 0, sv, -1, ESOCKTNOSUPPORT, "raw open as non-root" },
+#ifndef UCLINUX
+	/* Ignore this test on uClinux */
 	{ PF_UNIX, SOCK_STREAM, 0, 0, -1, EFAULT, "bad pointer" },
 	{ PF_UNIX, SOCK_STREAM, 0, (int *)7, -1, EFAULT, "bad pointer" },
+#endif
+	/*
 	{ PF_INET, SOCK_DGRAM, 17, sv, -1, EOPNOTSUPP, "UDP socket" },
 	{ PF_INET, SOCK_DGRAM, 6, sv, -1, ESOCKTNOSUPPORT, "TCP dgram" },
 	{ PF_INET, SOCK_STREAM, 6, sv, -1, EOPNOTSUPP, "TCP socket" },
 	{ PF_INET, SOCK_STREAM, 1, sv, -1, ESOCKTNOSUPPORT, "ICMP stream" },
+	*/
 };
 
 int TST_TOTAL=sizeof(tdat)/sizeof(tdat[0]); /* Total number of test cases. */
--- ltp-full-20051205.org/testcases/kernel/syscalls/statfs/statfs02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/statfs/statfs02.c	2005-12-12 17:50:22.000000000 +0800
@@ -62,7 +62,11 @@
 #include "usctest.h"
 
 char *TCID = "statfs02";
+#ifdef UCLINUX
+int TST_TOTAL = 3;
+#else
 int TST_TOTAL = 5;
+#endif
 int fileHandle = 0;
 extern int Tst_count;
 
@@ -90,11 +94,14 @@
 	/* path is too long - ENAMETOOLONG */
 	{bad_file, &fsbuf, ENAMETOOLONG},
 
+#ifndef UCLINUX
+	/* Ignore this test on uClinux */
 	/* path is an invalid address - EFAULT */
 	{(char *)-1, &fsbuf, EFAULT},
 
 	/* buf is an invalid address - EFAULT */
 	{fname, (struct statfs *)-1, EFAULT}
+#endif
 };
 
 void setup(void);
--- ltp-full-20051205.org/testcases/kernel/syscalls/sysctl/sysctl05.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/sysctl/sysctl05.c	2005-12-12 17:50:45.000000000 +0800
@@ -107,6 +107,8 @@
 	int i;
 	int ret;
 
+#ifndef UCLINUX
+	tst_resm(TINFO, "Ignore this test on uClinux");
 	/* parse standard options */
 	if ((msg = parse_opts(ac, av, (option_t *)NULL, NULL)) != (char *)NULL){
 		tst_brkm(TBROK, tst_exit, "OPTION PARSING ERROR - %s", msg);
@@ -155,6 +157,7 @@
 		}
 	}
 	cleanup();
+#endif
 
 	/*NOTREACHED*/
 	return(0);
--- ltp-full-20051205.org/testcases/kernel/syscalls/sysinfo/sysinfo02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/sysinfo/sysinfo02.c	2005-12-29 14:17:15.000000000 +0800
@@ -79,6 +79,8 @@
 int TST_TOTAL = 1;		/* Total number of test cases */
 extern int Tst_count;		/* Test case counter for tst_* routines */
 
+#ifndef UCLINUX
+
 int
 main(int ac, char **av)
 {
@@ -124,6 +126,16 @@
 
 }
 
+#else
+
+int main()
+{
+	tst_resm(TINFO, "sysinfo02 test is not available on uClinux");
+	return 0;
+}
+
+#endif /* ifndef UCLINUX */
+
 /*
  * setup()
  *	performs one time setup
--- ltp-full-20051205.org/testcases/kernel/syscalls/times/times02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/times/times02.c	2005-12-29 14:22:36.000000000 +0800
@@ -58,6 +58,8 @@
 void setup(void);
 void cleanup(void);
 
+#ifndef UCLINUX
+
 int main(int argc, char **argv)
 {
 	int lc;				/* loop counter */
@@ -99,6 +101,16 @@
 
 }
 
+#else
+
+int main()
+{
+	tst_resm(TINFO, "times02 test is not available on uClinux");
+	return 0;
+}
+
+#endif /* ifndef UCLINUX */
+
 /*
  * setup()
  *	performs all ONE TIME setup for this test
--- ltp-full-20051205.org/testcases/kernel/syscalls/uname/uname02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/uname/uname02.c	2005-12-29 14:25:00.000000000 +0800
@@ -66,6 +66,8 @@
 
 int exp_enos[] = {14, 0};	/* 0 terminated list of expected errnos */
 
+#ifndef UCLINUX
+
 int main(int ac, char **av)
 {
 	int lc;				/* loop counter */
@@ -119,6 +121,16 @@
 
 }
 
+#else
+
+int main()
+{
+	tst_resm(TINFO, "uname02 test is not available on uClinux");
+	return 0;
+}
+
+#endif /* ifndef UCLINUX */
+
 /*
  * setup() - performs all the ONE TIME setup for this test.
  */
--- ltp-full-20051205.org/testcases/kernel/syscalls/ustat/ustat02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/ustat/ustat02.c	2005-12-09 16:02:14.000000000 +0800
@@ -79,7 +79,11 @@
 static void cleanup();
 
 char *TCID = "ustat02"; 	/* Test program identifier.    */
+#ifdef UCLINUX
+int TST_TOTAL = 1;
+#else
 int TST_TOTAL = 2;       	/* Total number of test cases. */
+#endif
 extern int Tst_count;    	/* Test Case counter for tst_* routines */
 
 static int exp_enos[] = {EINVAL, EFAULT, 0};
--- ltp-full-20051205.org/testcases/kernel/syscalls/write/write03.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/write/write03.c	2005-12-29 14:48:24.000000000 +0800
@@ -69,6 +69,8 @@
 
 char filename[100];
 
+#ifndef UCLINUX
+
 int main(int argc, char **argv)
 {
 	int lc;				/* loop counter */
@@ -146,6 +148,16 @@
 	return(0);
 }
 
+#else
+
+int main()
+{
+	tst_resm(TINFO, "write03 test is not available on uClinux");
+	return 0;
+}
+
+#endif /* ifndef UCLINUX */
+
 /*
  * setup() - performs all ONE TIME setup for this test
  */
--- ltp-full-20051205.org/testcases/kernel/syscalls/write/write05.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/write/write05.c	2005-12-12 17:53:21.000000000 +0800
@@ -112,6 +112,8 @@
 		}
 		tst_resm(TINFO, "Exit Block 1");
 
+#ifndef UCLINUX
+		/* Ignore this test on uClinux */
 //block2:
 		tst_resm(TINFO, "Enter Block 2: test with a bad address");
 		fd = creat(filename, 0644);
@@ -137,6 +139,7 @@
 			tst_resm(TPASS, "received EFAULT as expected.");
 		}
 		tst_resm(TINFO, "Exit Block 2");
+#endif
 
 //block3:
 		tst_resm(TINFO, "Enter Block 3: test with invalid pipe");
--- ltp-full-20051205.org/testcases/kernel/syscalls/writev/writev01.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/writev/writev01.c	2005-12-12 17:53:47.000000000 +0800
@@ -199,7 +199,6 @@
 			cleanup();
 			/*NOTREACHED*/
 		}
-
 //block1: /* given vector length -1, writev() return EINVAL. */
 		tst_resm(TINFO, "Enter Block 1");
 		fail = 0;
@@ -225,6 +224,8 @@
 		}
 		tst_resm(TINFO, "Exit block 1");
 
+#ifndef UCLINUX
+		/* Ignore this test on uClinux */
 //block2:
 	/* This testcases doesn't look like what it intent to do
         * 1. it is not using the wr_iovec initialized 
@@ -268,7 +269,10 @@
 			tst_resm(TINFO, "block 2 PASSED");
 		}
 		tst_resm(TINFO, "Exit block 2");
+#endif
 
+#ifndef UCLINUX
+		/* Ignore this test on uClinux */
 //block3: /* given 1 bad vector buffer with good ones, writev() success */
 		tst_resm(TINFO, "Enter block 3");
 		fail = 0;
@@ -309,6 +313,7 @@
 			tst_resm(TINFO, "block 3 PASSED");
 		}
 		tst_resm(TINFO, "Exit block 3");
+#endif
 
 //block4: /* given bad file discriptor, writev() return EBADF. */
 		tst_resm(TINFO, "Enter block 4");
--- ltp-full-20051205.org/testcases/kernel/syscalls/writev/writev02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/writev/writev02.c	2005-12-29 14:30:32.000000000 +0800
@@ -94,6 +94,8 @@
 void cleanup(void);
 int fail;
 
+#ifndef UCLINUX
+
 int main(int argc, char **argv)
 {
 	int lc;				/* loop counter */
@@ -221,6 +223,16 @@
 	return(0);
 }
 
+#else
+
+int main()
+{
+	tst_resm(TINFO, "writev02 test is not available on uClinux");
+	return 0;
+}
+
+#endif /* ifndef UCLINUX */
+
 /*
  * setup()
  *	performs all ONE TIME setup for this test
--- ltp-full-20051205.org/testcases/kernel/syscalls/writev/writev03.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/writev/writev03.c	2005-12-29 14:41:40.000000000 +0800
@@ -90,6 +90,8 @@
 void cleanup(void);
 int fail;
 
+#ifndef UCLINUX
+
 int main(int argc, char **argv)
 {
 	int lc;				/* loop counter */
@@ -273,6 +275,16 @@
 	return(0);
 }
 
+#else
+
+int main()
+{
+	tst_resm(TINFO, "writev03 test is not available on uClinux");
+	return 0;
+}
+
+#endif /* ifndef UCLINUX */
+
 /*
  * setup()
  *	performs all ONE TIME setup for this test
--- ltp-full-20051205.org/testcases/kernel/syscalls/writev/writev04.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/writev/writev04.c	2005-12-29 14:45:06.000000000 +0800
@@ -90,6 +90,8 @@
 void cleanup(void);
 int fail;
 
+#ifndef UCLINUX
+
 int main(int argc, char **argv)
 {
 	int lc;				/* loop counter */
@@ -282,6 +284,16 @@
 	return(0);
 }
 
+#else
+
+int main()
+{
+	tst_resm(TINFO, "test writev04 is not available on uClinux");
+	return 0;
+}
+
+#endif /* ifndef UCLINUX */
+
 /*
  * setup()
  *	performs all ONE TIME setup for this test
--- ltp-full-20051205.org/testcases/kernel/syscalls/writev/writev05.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/writev/writev05.c	2005-12-29 14:31:29.000000000 +0800
@@ -89,6 +89,8 @@
 void cleanup(void);
 int fail;
 
+#ifndef UCLINUX
+
 int main(int argc, char **argv)
 {
 	int lc;				/* loop counter */
@@ -206,6 +208,16 @@
 	return(0);
 }
 
+#else
+
+int main()
+{
+	tst_resm(TINFO, "write05 test is not available on uClinux");
+	return 0;
+}
+
+#endif /* ifndef UCLINUX */
+
 /*
  * setup()
  *	performs all ONE TIME setup for this test
--- ltp-full-20051205.org/testcases/kernel/syscalls/readv/readv02.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/readv/readv02.c	2005-12-15 15:12:14.000000000 +0800
@@ -132,6 +132,12 @@
 				 "value");
 		}
 
+#ifndef UCLINUX
+		/*
+		 * This test set is trying to access outside address space.
+		 * It doesn't work on uClinux.
+		 * Ignore this test set on uClinux.
+		 */
 //test2:
 		l_seek(fd[0], CHUNK * 6, 0);
 		if (readv(fd[0], (rd_iovec + 6), 3) < 0) {
@@ -150,6 +156,7 @@
 			tst_resm(TFAIL, "Error: readv returned a positive "
 				 "value");
 		}
+#endif
 
 //test3:
 		if (readv(fd[1], (rd_iovec + 9), 1) < 0) {
--- ltp-full-20051205.org/testcases/kernel/syscalls/recvfrom/recvfrom01.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/recvfrom/recvfrom01.c	2005-12-21 17:47:50.000000000 +0800
@@ -96,18 +96,22 @@
 /* 2 */
 	{ 0, 0, 0, buf, sizeof(buf), 0, (struct sockaddr *)&from, &fromlen,
 		-1, ENOTSOCK, setup0, cleanup0, "invalid socket" },
+#ifndef UCLINUX
 /* 3 */
 	{ PF_INET, SOCK_STREAM, 0, (void *)buf, sizeof(buf), 0,
 		(struct sockaddr *)-1, &fromlen,
 		0, ENOTSOCK, setup1, cleanup1, "invalid socket buffer" },
+#endif
 /* 4 */
 	{ PF_INET, SOCK_STREAM, 0, (void *)buf, sizeof(buf), -1,
 		(struct sockaddr *)&from, &fromlen,
 		-1, EINVAL, setup2, cleanup1, "invalid socket length" },
+#ifndef UCLINUX
 /* 5 */
 	{ PF_INET, SOCK_STREAM, 0, (void *)-1, sizeof(buf), 0,
 		(struct sockaddr *)&from, &fromlen,
 		-1, EFAULT, setup1, cleanup1, "invalid recv buffer" },
+#endif
 /* 6 */
 	{ PF_INET, SOCK_STREAM, 0, (void *)buf, sizeof(buf), -1,
 		(struct sockaddr *)&from, &fromlen,
@@ -281,7 +285,7 @@
 			strerror(errno));
 		return -1;
 	}
-	switch ((pid = fork())) {
+	switch ((pid = FORK_OR_VFORK())) {
 	case 0:	/* child */
 #ifdef UCLINUX
 		if (self_exec(argv0, "d", sfd) < 0) {
--- ltp-full-20051205.org/testcases/kernel/syscalls/recvmsg/recvmsg01.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/recvmsg/recvmsg01.c	2005-12-27 10:46:45.000000000 +0800
@@ -136,6 +136,8 @@
 	{ PF_INET, SOCK_STREAM, 0, iov, 1, (void *)buf, sizeof(buf), &msgdat, -1,
 		(struct sockaddr *)&from, -1,
 		-1, EINVAL, setup1, cleanup1, "invalid socket length" },
+#ifndef UCLINUX
+/* test case not available on uClinux */
 /* 5 */
 	{ PF_INET, SOCK_STREAM, 0, iov, 1, (void *)-1, sizeof(buf), &msgdat, 0,
 		(struct sockaddr *)&from, sizeof(from),
@@ -144,6 +146,7 @@
 	{ PF_INET, SOCK_STREAM, 0, 0, 1, (void *)buf, sizeof(buf), &msgdat, 0,
 		(struct sockaddr *)&from, sizeof(from),
 		-1, EFAULT, setup1, cleanup1, "invalid iovec buffer" },
+#endif /* UCLINUX */
 /* 7 */
 	{ PF_INET, SOCK_STREAM, 0, iov, -1, (void *)buf, sizeof(buf), &msgdat,0,
 		(struct sockaddr *)&from, sizeof(from),
@@ -413,7 +416,7 @@
 		return -1;
 	}
 
-	switch ((pid = fork())) {
+	switch ((pid = FORK_OR_VFORK())) {
 	case 0:	/* child */
 #ifdef UCLINUX
 		if (self_exec(argv0, "dd", sfd, ufd) < 0) {
--- ltp-full-20051205.org/testcases/kernel/syscalls/sendmsg/sendmsg01.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/sendmsg/sendmsg01.c	2005-12-27 11:12:39.000000000 +0800
@@ -123,10 +123,13 @@
 	{ 0, 0, 0, iov, 1, (void *)buf, sizeof(buf), &msgdat, 0,
 		(struct sockaddr *)&sin1, sizeof(sin1),
 		-1, ENOTSOCK, setup0, cleanup0, "invalid socket" },
+#ifndef UCLINUX
+/* test case not available on uClinux */
 /* 3 */
 	{ PF_INET, SOCK_DGRAM, 0, iov, 1, (void *)-1, sizeof(buf), &msgdat, 0,
 		(struct sockaddr *)&sin1, sizeof(sin1),
 		-1, EFAULT, setup1, cleanup1, "invalid send buffer" },
+#endif /* UCLINUX */
 /* 4 */
 	{ PF_INET, SOCK_STREAM, 0, iov, 1, (void *)buf, sizeof(buf), &msgdat, 0,
 		(struct sockaddr *)&sin2, sizeof(sin2),
@@ -139,10 +142,12 @@
 	{ PF_INET, SOCK_DGRAM, 0, iov, 1, (void *)buf, sizeof(buf), &msgdat, 0,
 		(struct sockaddr *)&sin1, -1,
 		-1, EINVAL, setup1, cleanup1, "invalid to buffer length" },
+#ifndef UCLINUX
 /* 7 */
 	{ PF_INET, SOCK_DGRAM, 0, iov, 1, (void *)buf, sizeof(buf), &msgdat, 0,
 		(struct sockaddr *)-1, -1,
 		-1, EINVAL, setup1, cleanup1, "invalid to buffer" },
+#endif /* UCLINUX */
 /* 8 */
 	{ PF_INET, SOCK_DGRAM, 0, iov, 1, (void *)bigbuf, sizeof(bigbuf),
 		&msgdat, 0,
@@ -152,6 +157,7 @@
 	{ PF_INET, SOCK_STREAM, 0, iov, 1, (void *)buf, sizeof(buf), &msgdat, 0,
 		(struct sockaddr *)&sin1, sizeof(sin1),
 		-1, EPIPE, setup2, cleanup1, "local endpoint shutdown" },
+#ifndef UCLINUX
 /* 10 */
 	{ PF_INET, SOCK_STREAM, 0, 0, 1, (void *)buf, sizeof(buf), &msgdat, 0,
 		(struct sockaddr *)&sin1, sizeof(sin1),
@@ -160,6 +166,7 @@
 	{ PF_INET, SOCK_STREAM, 0, iov, 1, (void *)buf, sizeof(buf), 0,
 		0, (struct sockaddr *)&sin1, sizeof(sin1),
 		-1, EFAULT, setup1, cleanup1, "invalid msghdr pointer" },
+#endif /* UCLINUX */
 /* 12 */
 	{ PF_UNIX, SOCK_DGRAM, 0, iov, 1, (void *)buf, sizeof(buf), &msgdat,
 		0, (struct sockaddr *)&sun1, sizeof(sun1),
@@ -176,10 +183,12 @@
 	{ PF_UNIX, SOCK_DGRAM, 0, iov, 1, (void *)buf, sizeof(buf), &msgdat,
 		0, (struct sockaddr *)&sun1, sizeof(sun1),
 		0, EOPNOTSUPP, setup6, cleanup4, "invalid cmsg length" },
+#ifndef UCLINUX
 /* 16 */
 	{ PF_UNIX, SOCK_DGRAM, 0, iov, 1, (void *)buf, sizeof(buf), &msgdat,
 		0, (struct sockaddr *)&sun1, sizeof(sun1),
 		-1, EFAULT, setup8, cleanup4, "invalid cmsg pointer" },
+#endif /* UCLINUX */
 };
 
 int TST_TOTAL=sizeof(tdat)/sizeof(tdat[0]); /* Total number of test cases. */
--- ltp-full-20051205.org/testcases/kernel/syscalls/pause/pause03.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/pause/pause03.c	2005-12-21 17:10:49.000000000 +0800
@@ -110,7 +110,7 @@
 		Tst_count=0;
 
 		/* Creat a new process using fork() */
-		if ((cpid = fork()) == -1) {
+		if ((cpid = FORK_OR_VFORK()) == -1) {
 			tst_brkm(TBROK, cleanup, "fork() failed");
 		}
 
--- ltp-full-20051205.org/testcases/kernel/syscalls/sysctl/sysctl05.c	2005-12-13 11:46:38.000000000 +0800
+++ testcases/kernel/syscalls/sysctl/sysctl05.c	2005-12-12 17:50:45.000000000 +0800
@@ -107,6 +107,8 @@
 	int i;
 	int ret;
 
+#ifndef UCLINUX
+	tst_resm(TINFO, "Ignore this test on uClinux");
 	/* parse standard options */
 	if ((msg = parse_opts(ac, av, (option_t *)NULL, NULL)) != (char *)NULL){
 		tst_brkm(TBROK, tst_exit, "OPTION PARSING ERROR - %s", msg);
@@ -155,6 +157,7 @@
 		}
 	}
 	cleanup();
+#endif
 
 	/*NOTREACHED*/
 	return(0);
